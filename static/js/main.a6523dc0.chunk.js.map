{"version":3,"sources":["api/api.ts","assets/images/user.png","redux/dialogs-reducer.ts","components/Login/Login.module.css","components/error-indicator/error-indicator.module.css","components/Navbar/Navbar.module.css","components/common/FormsControls/FormsControls.js","serviceWorker.js","components/Navbar/Navbar.jsx","utils/object-helpers.js","redux/users-reducer.ts","components/common/Paginator/Paginator.tsx","components/Users/User.jsx","components/Users/Users.tsx","redux/users-selectors.ts","components/Users/UsersContainer.tsx","components/Header/Header.jsx","redux/auth-reducer.ts","components/Header/HeaderContainer.jsx","components/Login/Login.jsx","redux/app-reducer.ts","redux/sidebar-reducer.ts","redux/redux-store.ts","hoc/withSuspense.js","components/error-indicator/error-indicator.js","components/error-boundry/error-boundry.js","App.js","index.js","components/Users/users.module.css","components/common/Paginator/Paginator.module.css","components/common/Preloader/Preloader.js","utils/validators/validators.js","components/common/FormsControls/FormsControls.module.css","components/Header/Header.module.css","redux/profile-reducer.ts"],"names":["__webpack_require__","d","__webpack_exports__","usersAPI","profileAPI","ResultCodesEnum","ResultCodeForCapctha","authAPI","securityAPI","axios__WEBPACK_IMPORTED_MODULE_0__","instance","n","axios","create","withCredentials","baseURL","headers","API-KEY","getUsers","currentPage","arguments","length","undefined","pageSize","get","concat","then","response","data","follow","userId","post","unfollow","delete","getProfile","console","warn","getStatus","updateStatus","status","put","savePhoto","photoFile","formData","FormData","append","Content-Type","saveProfile","profile","me","res","login","email","password","rememberMe","captcha","logout","getCaptchaUrl","module","exports","p","initialState","dialogs","id","name","messages","message","sendMessageCreator","newMessageBody","type","dialogsReducer","state","action","body","Object","C_Users_Desktop_sss_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_1__","C_Users_Desktop_sss_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","header","error","nav","item","activeLink","FormControl","_ref","input","_ref$meta","meta","touched","children","hasError","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","className","styles","formControl","Textarea","props","restProps","child","C_Users_Desktop_sss_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","assign","Input","createField","placeholder","validators","component","text","redux_form__WEBPACK_IMPORTED_MODULE_4__","validate","Boolean","window","location","hostname","match","Navbar","react_default","s","NavLink","to","activeClassName","active","updateObjectInArray","items","itemId","objPropName","newObjProps","map","u","objectSpread2","FOLLOW","UNFOLLOW","SET_USERS","users","totalUsersCount","isFetching","followingInProgress","followSuccess","unfollowSuccess","toggleFollowingProgress","_followUnfollowFlow","_ref2","asyncToGenerator","regenerator_default","mark","_callee2","dispatch","apiMethod","actionCreator","wrap","_context2","prev","next","sent","resultCode","stop","_x3","_x4","_x5","_x6","apply","this","usersReducer","followed","count","toConsumableArray","filter","Paginator","totalItemsCount","onPageChanged","_ref$portionSize","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","_useState","useState","_useState2","slicedToArray","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","cn","paginator","button","onClick","defineProperty","selectedPage","pageNumber","key","e","User","user","src","photos","small","userPhoto","disabled","some","Users","objectWithoutProperties","common_Paginator_Paginator","Users_User","createSelector","usersPage","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","_this","_this$props","Fragment","pageTitle","Preloader","components_Users_Users","React","Component","compose","connect","_ref3","_callee3","_context3","bind","_x7","_ref4","_callee4","_context4","_x8","page","_callee","getState","_context","totalCount","_x","_x2","Header","loginBlock","isAuth","logo","captchaUrl","setAuthUserData","payload","getCaptchaUrlSuccess","getAuthUserData","meData","_meData$data","_login","Success","url","authReducer","HeaderContainer","components_Header_Header","auth","LoginReduxForm","reduxForm","form","handleSubmit","onSubmit","required","style","formSummaryError","CaptchaIsRequired","stopSubmit","_error","Redirect","initialized","appReducer","sidebarReducer","rootReducer","combineReducers","profilePage","profileReducer","dialogsPage","sidebar","formReducer","app","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","__store__","withSuspense","Suspense","fallback","ErrorIndicator","ErrorBoundary","setState","error_indicator","DialogsContainer","lazy","ProfileContainer","App","initializeApp","Header_HeaderContainer","components_Navbar_Navbar","Switch","Route","exact","path","render","Users_UsersContainer","components_Login_Login","from","AppContainer","withRouter","promise","Promise","all","SamuraiJSApp","BrowserRouter","error_boundry_ErrorBoundary","es","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","maxLengthCreator","value","maxLength","ADD_POST","SET_STATUS","DELETE_POST","posts","likesCount","newPostText","addPostActionCreator","setStatus","getUserProfile","C_Users_Desktop_sss_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","C_Users_Desktop_sss_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","t0","file","_ref5","_callee5","_context5","abrupt","reject","newPost","C_Users_Desktop_sss_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_3__","C_Users_Desktop_sss_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_2__","postId"],"mappings":"yFAAAA,EAAAC,EAAAC,EAAA,sBAAAC,IAAAH,EAAAC,EAAAC,EAAA,sBAAAE,IAAAJ,EAAAC,EAAAC,EAAA,sBAAAG,IAAAL,EAAAC,EAAAC,EAAA,sBAAAI,IAAAN,EAAAC,EAAAC,EAAA,sBAAAK,IAAAP,EAAAC,EAAAC,EAAA,sBAAAM,IAAA,IAwDYH,EAKAC,EA7DZG,EAAAT,EAAA,KAGMU,EAHNV,EAAAW,EAAAF,GAGiBG,EAAMC,OAAO,CAC1BC,iBAAiB,EACjBC,QAAS,gDACTC,QAAa,CACTC,UAAW,kEAKNd,EAAW,CACpBe,SADoB,WACqB,IAAhCC,EAAgCC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAlB,EAAGG,EAAeH,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAJ,GACjC,OAAOV,EAASc,IAAT,cAAAC,OAA2BN,EAA3B,WAAAM,OAAgDF,IAClDG,KAAK,SAAAC,GACF,OAAOA,EAASC,QAG5BC,OAPoB,SAObC,GACH,OAAOpB,EAASqB,KAAT,UAAAN,OAAwBK,KAEnCE,SAVoB,SAUXF,GACL,OAAOpB,EAASuB,OAAT,UAAAR,OAA0BK,KAErCI,WAboB,SAaTJ,GAEP,OADAK,QAAQC,KAAK,8CACNhC,EAAW8B,WAAWJ,KAIxB1B,EAAa,CACtB8B,WADsB,SACXJ,GACP,OAAOpB,EAASc,IAAI,WAAaM,IAErCO,UAJsB,SAIZP,GACN,OAAOpB,EAASc,IAAI,kBAAoBM,IAE5CQ,aAPsB,SAOTC,GACT,OAAO7B,EAAS8B,IAAT,iBAA+B,CAAED,OAAQA,KAEpDE,UAVsB,SAUZC,GACN,IAAMC,EAAW,IAAIC,SAGrB,OAFAD,EAASE,OAAO,QAASH,GAElBhC,EAAS8B,IAAT,gBAA8BG,EAAU,CAC3C3B,QAAS,CACL8B,eAAgB,0BAI5BC,YApBsB,SAoBVC,GACR,OAAOtC,EAAS8B,IAAT,UAAwBQ,eAI3B3C,sEAKAC,6DAuBL,IAAMC,EAAU,CACnB0C,GADmB,WAEf,OAAOvC,EAASc,IAAT,WAAwCE,KAAK,SAAAwB,GAAG,OAAIA,EAAItB,QAEnEuB,MAJmB,SAIbC,EAAeC,GAAsE,IAApDC,EAAoDlC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,GAAhCmC,EAAgCnC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAP,KAChF,OAAOV,EAASqB,KAAT,aAA+C,CAAEqB,QAAOC,WAAUC,aAAYC,YAChF7B,KAAK,SAAAwB,GAAG,OAAIA,EAAItB,QAEzB4B,OARmB,WASf,OAAO9C,EAASuB,OAAT,gBAMFzB,EAAc,CACvBiD,cADuB,WAEnB,OAAO/C,EAASc,IAAT,mDCrGfkC,EAAAC,QAAiB3D,EAAA4D,EAAuB,sHCWpCC,EAAe,CACfC,QAAS,CACL,CAACC,GAAI,EAAGC,KAAM,UACd,CAACD,GAAI,EAAGC,KAAM,UACd,CAACD,GAAI,EAAGC,KAAM,SACd,CAACD,GAAI,EAAGC,KAAM,SACd,CAACD,GAAI,EAAGC,KAAM,UACd,CAACD,GAAI,EAAGC,KAAM,WAElBC,SAAU,CACN,CAACF,GAAI,EAAGG,QAAS,MACjB,CAACH,GAAI,EAAGG,QAAS,6BACjB,CAACH,GAAI,EAAGG,QAAS,MACjB,CAACH,GAAI,EAAGG,QAAS,MACjB,CAACH,GAAI,EAAGG,QAAS,QAwBZC,EAAqB,SAACC,GAAD,MAA2D,CAACC,KAjDzE,sCAiD6FD,mBAGnGE,IArBQ,WAAyD,IAAxDC,EAAwDnD,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAhDyC,EAAcW,EAAkCpD,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC5E,OAAQkD,EAAOH,MACX,IAjCa,sCAkCT,IAAII,EAAOD,EAAOJ,eAClB,OAAOM,OAAAC,EAAA,EAAAD,QAAAC,EAAA,EAAAD,CAAA,GACAH,GADP,IAEIN,SAAQ,GAAAxC,OAAAiD,OAAAE,EAAA,EAAAF,CAAMH,EAAMN,UAAZ,CAAsB,CAACF,GAAI,EAAGG,QAASO,OAEvD,QACI,OAAOF,yBCvCnBb,EAAAC,QAAA,CAAkBkB,OAAA,4CCAlBnB,EAAAC,QAAA,CAAkBmB,MAAA,oDCAlBpB,EAAAC,QAAA,CAAkBoB,IAAA,oBAAAC,KAAA,qBAAAC,WAAA,kUCIZC,EAAc,SAAAC,GAA+CA,EAA7CC,MAA6C,IAAAC,EAAAF,EAAtCG,KAAOC,EAA+BF,EAA/BE,QAAST,EAAsBO,EAAtBP,MAAQU,EAAcL,EAAdK,SAC3CC,EAAWF,GAAWT,EAC5B,OACIY,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAOC,YAAc,KAAON,EAAWK,IAAOhB,MAAQ,KAClEY,EAAAC,EAAAC,cAAA,WACKJ,GAEJC,GAAYC,EAAAC,EAAAC,cAAA,YAAOd,KAKnBkB,EAAW,SAACC,GAAU,IACxBb,EAAoCa,EAApCb,MAAuBc,GAAaD,EAA7BX,KAA6BW,EAAvBE,MADWzB,OAAA0B,EAAA,EAAA1B,CACYuB,EADZ,2BAE/B,OAAOP,EAAAC,EAAAC,cAACV,EAAgBe,EAAOP,EAAAC,EAAAC,cAAA,WAAAlB,OAAA2B,OAAA,GAAcjB,EAAWc,MAG/CI,EAAQ,SAACL,GAAU,IACrBb,EAAoCa,EAApCb,MAAuBc,GAAaD,EAA7BX,KAA6BW,EAAvBE,MADQzB,OAAA0B,EAAA,EAAA1B,CACeuB,EADf,2BAE5B,OAAOP,EAAAC,EAAAC,cAACV,EAAgBe,EAAOP,EAAAC,EAAAC,cAAA,QAAAlB,OAAA2B,OAAA,GAAWjB,EAAWc,MAG5CK,EAAc,SAACC,EAAaxC,EAAMyC,EAAYC,GAAhC,IAA2CT,EAA3C7E,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAmD,GAAIuF,EAAvDvF,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAA8D,GAA9D,OACvBsE,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACgB,EAAA,EAADlC,OAAA2B,OAAA,CAAOG,YAAaA,EAAaxC,KAAMA,EAChC6C,SAAUJ,EACVC,UAAWA,GACPT,IAJf,IAKQU,6CCrBQG,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,6KCYSC,EA1BA,WACX,OACIC,EAAAzB,EAAAC,cAAA,OAAKC,UAAWwB,IAAEtC,KACdqC,EAAAzB,EAAAC,cAAA,OAAKC,UAAWwB,IAAErC,MACdoC,EAAAzB,EAAAC,cAAC0B,EAAA,EAAD,CAASC,GAAG,WAAWC,gBAAiBH,IAAEpC,YAA1C,YAEJmC,EAAAzB,EAAAC,cAAA,OAAKC,UAAS,GAAApE,OAAK4F,IAAErC,KAAP,KAAAvD,OAAe4F,IAAEI,SAC3BL,EAAAzB,EAAAC,cAAC0B,EAAA,EAAD,CAASC,GAAG,WAAWC,gBAAiBH,IAAEpC,YAA1C,aAEJmC,EAAAzB,EAAAC,cAAA,OAAKC,UAAS,GAAApE,OAAK4F,IAAErC,KAAP,KAAAvD,OAAe4F,IAAEI,SAC3BL,EAAAzB,EAAAC,cAAC0B,EAAA,EAAD,CAASC,GAAG,SAASC,gBAAiBH,IAAEpC,YAAxC,UAGJmC,EAAAzB,EAAAC,cAAA,OAAKC,UAAWwB,IAAErC,MACdoC,EAAAzB,EAAAC,cAAA,kBAEJwB,EAAAzB,EAAAC,cAAA,OAAKC,UAAWwB,IAAErC,MACdoC,EAAAzB,EAAAC,cAAA,mBAEJwB,EAAAzB,EAAAC,cAAA,OAAKC,UAAWwB,IAAErC,MACdoC,EAAAzB,EAAAC,cAAA,4HCvBH8B,EAAsB,SAACC,EAAOC,EAAQC,EAAaC,GAC5D,OAAOH,EAAMI,IAAI,SAAAC,GACb,OAAIA,EAAEH,KAAiBD,EACZlD,OAAAuD,EAAA,EAAAvD,QAAAuD,EAAA,EAAAvD,CAAA,GAAIsD,GAAMF,GAEdE,KCCTE,EAAS,8BACTC,EAAW,gCACXC,EAAY,iCAOdvE,EAAe,CACfwE,MAAO,GACP9G,SAAU,GACV+G,gBAAiB,EACjBnH,YAAa,EACboH,YAAY,EACZC,oBAAqB,IAkDZC,EAAgB,SAAC3G,GAAD,MAA8C,CAACuC,KAAM6D,EAAQpG,WAK7E4G,EAAkB,SAAC5G,GAAD,MAAgD,CAACuC,KAAM8D,EAAUrG,WAkCnF6G,EAA0B,SAACJ,EAAqBzG,GAAtB,MAA6E,CAChHuC,KAnGiC,oDAoGjCkE,aACAzG,WAmBE8G,EAAmB,eAAAC,EAAAnE,OAAAoE,EAAA,EAAApE,CAAAqE,EAAApD,EAAAqD,KAAG,SAAAC,EAAOC,EACApH,EACAqH,EAAgBC,GAFvB,OAAAL,EAAApD,EAAA0D,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAGxBN,EAASP,GAAwB,EAAM7G,IAHfwH,EAAAE,KAAA,EAIHL,EAAUrH,GAJP,OAMQ,GANRwH,EAAAG,KAMX7H,KAAK8H,YACdR,EAASE,EAActH,IAE3BoH,EAASP,GAAwB,EAAO7G,IAThB,wBAAAwH,EAAAK,SAAAV,MAAH,gBAAAW,EAAAC,EAAAC,EAAAC,GAAA,OAAAlB,EAAAmB,MAAAC,KAAA7I,YAAA,GAwBV8I,EAlIM,WAA8D,IAA7D3F,EAA6DnD,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAArDyC,EAAcW,EAAuCpD,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC/E,OAAQkD,EAAOH,MACX,KAAK6D,EACD,OAAOxD,OAAAuD,EAAA,EAAAvD,QAAAuD,EAAA,EAAAvD,CAAA,GACAH,GADP,IAEI8D,MAAOX,EAAoBnD,EAAM8D,MAAO7D,EAAO1C,OAAQ,KAAM,CAACqI,UAAU,MAEhF,KAAKhC,EACD,OAAOzD,OAAAuD,EAAA,EAAAvD,QAAAuD,EAAA,EAAAvD,CAAA,GACAH,GADP,IAEI8D,MAAOX,EAAoBnD,EAAM8D,MAAO7D,EAAO1C,OAAQ,KAAM,CAACqI,UAAU,MAEhF,KAAK/B,EACD,OAAO1D,OAAAuD,EAAA,EAAAvD,QAAAuD,EAAA,EAAAvD,CAAA,GAAIH,GAAX,IAAkB8D,MAAO7D,EAAO6D,QAEpC,IAhCiB,wCAiCb,OAAO3D,OAAAuD,EAAA,EAAAvD,QAAAuD,EAAA,EAAAvD,CAAA,GAAIH,GAAX,IAAkBpD,YAAaqD,EAAOrD,cAE1C,IAlCsB,6CAmClB,OAAOuD,OAAAuD,EAAA,EAAAvD,QAAAuD,EAAA,EAAAvD,CAAA,GAAIH,GAAX,IAAkB+D,gBAAiB9D,EAAO4F,QAE9C,IApCmB,0CAqCf,OAAO1F,OAAAuD,EAAA,EAAAvD,QAAAuD,EAAA,EAAAvD,CAAA,GAAIH,GAAX,IAAkBgE,WAAY/D,EAAO+D,aAEzC,IAtC6B,oDAuCzB,OAAO7D,OAAAuD,EAAA,EAAAvD,QAAAuD,EAAA,EAAAvD,CAAA,GACAH,GADP,IAEIiE,oBAAqBhE,EAAO+D,WAAP,GAAA9G,OAAAiD,OAAA2F,EAAA,EAAA3F,CACXH,EAAMiE,qBADK,CACgBhE,EAAO1C,SACtCyC,EAAMiE,oBAAoB8B,OAAO,SAAAvG,GAAE,OAAIA,GAAMS,EAAO1C,WAGlE,QACI,OAAOyC,8DCPJgG,EAzCsB,SAAApF,GAQjC,IALwD,IAHrBqF,EAGqBrF,EAHrBqF,gBAAiBjJ,EAGI4D,EAHJ5D,SAClBJ,EAEsBgE,EAFtBhE,YACAsJ,EACsBtF,EADtBsF,cACsBC,EAAAvF,EAAtBwF,mBAAsB,IAAAD,EAAR,GAAQA,EAEpDE,EAAaC,KAAKC,KAAKN,EAAkBjJ,GAEzCwJ,EAAuB,GAClBC,EAAI,EAAGA,GAAKJ,EAAYI,IAC7BD,EAAME,KAAKD,GAGf,IAAIE,EAAeL,KAAKC,KAAKF,EAAaD,GATcQ,EAUhBC,mBAAS,GAVOC,EAAA3G,OAAA4G,EAAA,EAAA5G,CAAAyG,EAAA,GAUnDI,EAVmDF,EAAA,GAUpCG,EAVoCH,EAAA,GAYpDI,GAAyBF,EAAgB,GAAKZ,EAAc,EAC5De,EAAyBH,EAAgBZ,EAG7C,OAAOvD,EAAAzB,EAAAC,cAAA,OAAKC,UAAW8F,IAAG7F,IAAO8F,YAC3BL,EAAgB,GAClBnE,EAAAzB,EAAAC,cAAA,UAAQC,UAAWC,IAAO+F,OAAQC,QAAS,WAAQN,EAAiBD,EAAgB,KAApF,QAEKR,EACIT,OAAO,SAAA1G,GAAC,OAAIA,GAAK6H,GAAyB7H,GAAG8H,IAC7C3D,IAAI,SAACnE,GACN,OAAOwD,EAAAzB,EAAAC,cAAA,QAAMC,UAAY8F,IAAGjH,OAAAqH,EAAA,EAAArH,CAAA,GACvBoB,IAAOkG,aAAe7K,IAAgByC,GACxCkC,IAAOmG,YACGC,IAAKtI,EACLkI,QAAS,SAACK,GACN1B,EAAc7G,KACdA,KAEvBsH,EAAeK,GACbnE,EAAAzB,EAAAC,cAAA,UAAQC,UAAWC,IAAO+F,OAAQC,QAAS,WAAQN,EAAiBD,EAAgB,KAApF,6CCTGa,EAjCJ,SAAAjH,GAAmD,IAAjDkH,EAAiDlH,EAAjDkH,KAAM7D,EAA2CrD,EAA3CqD,oBAAqBxG,EAAsBmD,EAAtBnD,SAAUH,EAAYsD,EAAZtD,OAC9C,OACGuF,EAAAzB,EAAAC,cAAA,WACSwB,EAAAzB,EAAAC,cAAA,YACIwB,EAAAzB,EAAAC,cAAA,WACGwB,EAAAzB,EAAAC,cAAC0B,EAAA,EAAD,CAASC,GAAI,YAAc8E,EAAKtI,IAC/BqD,EAAAzB,EAAAC,cAAA,OAAK0G,IAA0B,MAArBD,EAAKE,OAAOC,MAAgBH,EAAKE,OAAOC,MAAQC,IACrD5G,UAAWwB,IAAEoF,cAGtBrF,EAAAzB,EAAAC,cAAA,WACKyG,EAAKlC,SACA/C,EAAAzB,EAAAC,cAAA,UAAQC,UAAWwB,IAAEwE,OAAQa,SAAUlE,EACpCmE,KAAK,SAAA5I,GAAE,OAAIA,IAAOsI,EAAKtI,KAClB+H,QAAS,WAAQ9J,EAASqK,EAAKtI,MAFvC,YAIAqD,EAAAzB,EAAAC,cAAA,UAAQC,UAAWwB,IAAEwE,OAAQa,SAAUlE,EAAoBmE,KAAK,SAAA5I,GAAE,OAAIA,IAAOsI,EAAKtI,KAC1E+H,QAAS,WAAQjK,EAAOwK,EAAKtI,MADrC,YAMdqD,EAAAzB,EAAAC,cAAA,YACIwB,EAAAzB,EAAAC,cAAA,YACIwB,EAAAzB,EAAAC,cAAA,eAAOyG,EAAKrI,MACZoD,EAAAzB,EAAAC,cAAA,cAAMyG,EAAK9J,OAAQ8J,EAAK9J,OAAO,cAEnC6E,EAAAzB,EAAAC,cAAA,gBCKLgH,EAnBY,SAAAzH,GACmB,IADjBhE,EACiBgE,EADjBhE,YAAamH,EACInD,EADJmD,gBAAiB/G,EACb4D,EADa5D,SAAUkJ,EACvBtF,EADuBsF,cAAepC,EACtClD,EADsCkD,MACjDpC,EAAWvB,OAAAmI,EAAA,EAAAnI,CAAAS,EAAA,sEAC1C,OAAOiC,EAAAzB,EAAAC,cAAA,WACHwB,EAAAzB,EAAAC,cAACkH,EAAD,CAAW3L,YAAaA,EAAasJ,cAAeA,EACzCD,gBAAiBlC,EAAiB/G,SAAUA,IACvD6F,EAAAzB,EAAAC,cAAA,OAAKC,UAAWwB,IAAEgF,MAEVhE,EAAMN,IAAI,SAAAC,GAAC,OAAIZ,EAAAzB,EAAAC,cAACmH,EAAD,CAAMV,KAAMrE,EACNQ,oBAAqBvC,EAAMuC,oBAC3B0D,IAAKlE,EAAEjE,GACP/B,SAAUiE,EAAMjE,SAChBH,OAAQoE,EAAMpE,sCCtBtCX,GAAW8L,YAJC,SAACzI,GACtB,OAAOA,EAAM0I,UAAU5E,OAIvB,SAACA,GACD,OAAOA,EAAMiC,OAAO,SAAAtC,GAAC,OAAI,MAGhBkF,GAAc,SAAC3I,GACxB,OAAOA,EAAM0I,UAAU1L,UAGd4L,GAAqB,SAAC5I,GAC/B,OAAOA,EAAM0I,UAAU3E,iBAGd8E,GAAiB,SAAC7I,GAC3B,OAAOA,EAAM0I,UAAU9L,aAGdkM,GAAgB,SAAC9I,GAC1B,OAAOA,EAAM0I,UAAU1E,YAEd+E,GAAyB,SAAC/I,GACnC,OAAOA,EAAM0I,UAAUzE,qBCarB+E,+MAMF9C,cAAgB,SAACwB,GAAuB,IAC7B1K,EAAYiM,EAAKvH,MAAjB1E,SACPiM,EAAKvH,MAAM/E,SAAS+K,EAAY1K,sEAPhB,IAAAkM,EACgBxD,KAAKhE,MAA9B9E,EADSsM,EACTtM,YAAaI,EADJkM,EACIlM,SACpB0I,KAAKhE,MAAM/E,SAASC,EAAaI,oCAUjC,OAAO6F,EAAAzB,EAAAC,cAAAwB,EAAAzB,EAAA+H,SAAA,KACHtG,EAAAzB,EAAAC,cAAA,UAAKqE,KAAKhE,MAAM0H,WACf1D,KAAKhE,MAAMsC,WAAanB,EAAAzB,EAAAC,cAACgI,EAAA,EAAD,MAAe,KACxCxG,EAAAzB,EAAAC,cAACiI,EAAD,CAAOvF,gBAAiB2B,KAAKhE,MAAMqC,gBAC5B/G,SAAU0I,KAAKhE,MAAM1E,SACrBJ,YAAa8I,KAAKhE,MAAM9E,YACxBsJ,cAAeR,KAAKQ,cACpBpC,MAAO4B,KAAKhE,MAAMoC,MAClBxG,OAAQoI,KAAKhE,MAAMpE,OACnBG,SAAUiI,KAAKhE,MAAMjE,SACrBwG,oBAAqByB,KAAKhE,MAAMuC,8BAvBtBsF,IAAMC,WAyCpBC,eAEXC,YAdkB,SAAC1J,GACnB,MAAO,CACH8D,MAAOnH,GAASqD,GAChBhD,SAAU2L,GAAY3I,GACtB+D,gBAAiB6E,GAAmB5I,GACpCpD,YAAaiM,GAAe7I,GAC5BgE,WAAY8E,GAAc9I,GAC1BiE,oBAAqB8E,GAAuB/I,KAS5C,CAAC1C,OL2Da,SAACC,GACnB,sBAAAoM,EAAAxJ,OAAAoE,EAAA,EAAApE,CAAAqE,EAAApD,EAAAqD,KAAO,SAAAmF,EAAOjF,GAAP,OAAAH,EAAApD,EAAA0D,KAAA,SAAA+E,GAAA,cAAAA,EAAA7E,KAAA6E,EAAA5E,MAAA,OACHZ,EAAoBM,EAAUpH,EAAQ3B,IAAS0B,OAAOwM,KAAKlO,KAAWsI,GADnE,wBAAA2F,EAAAzE,SAAAwE,MAAP,gBAAAG,GAAA,OAAAJ,EAAAlE,MAAAC,KAAA7I,YAAA,IK5DaY,SLiEO,SAACF,GACrB,sBAAAyM,EAAA7J,OAAAoE,EAAA,EAAApE,CAAAqE,EAAApD,EAAAqD,KAAO,SAAAwF,EAAOtF,GAAP,OAAAH,EAAApD,EAAA0D,KAAA,SAAAoF,GAAA,cAAAA,EAAAlF,KAAAkF,EAAAjF,MAAA,OACHZ,EAAoBM,EAAUpH,EAAQ3B,IAAS6B,SAASqM,KAAKlO,KAAWuI,GADrE,wBAAA+F,EAAA9E,SAAA6E,MAAP,gBAAAE,GAAA,OAAAH,EAAAvE,MAAAC,KAAA7I,YAAA,IKlEuBF,SLmCC,SAACyN,EACApN,GACzB,sBAAA4D,EAAAT,OAAAoE,EAAA,EAAApE,CAAAqE,EAAApD,EAAAqD,KAAO,SAAA4F,EAAO1F,EAAU2F,GAAjB,IAAAjN,EAAA,OAAAmH,EAAApD,EAAA0D,KAAA,SAAAyF,GAAA,cAAAA,EAAAvF,KAAAuF,EAAAtF,MAAA,cACHN,EArC0E,CAAC7E,KA7E1D,wCA6EkFlD,YAqC3EwN,IADrBG,EAAAtF,KAAA,EAGcrJ,IAASe,SAASyN,EAAMpN,GAHtC,OAGCK,EAHDkN,EAAArF,KAIHP,EA3B8E,CAClF7E,KAzFuB,0CA0FvBkE,YAyB8B,IAC1BW,GA9CiBb,EA8CCzG,EAAK+F,MA9C0C,CAACtD,KAAM+D,EAAWC,WA+CnFa,EArCsF,CAC1F7E,KAlF0B,6CAmF1B+F,MAmCgCxI,EAAKmN,aAN9B,wBAAAD,EAAAnF,OA/BuB,IAVTtB,GAyCduG,MAAP,gBAAAI,EAAAC,GAAA,OAAA9J,EAAA6E,MAAAC,KAAA7I,YAAA,MKzCW4M,CAKbT,wBCzEa2B,GAVA,SAACjJ,GACZ,OAAOmB,EAAAzB,EAAAC,cAAA,UAAQC,UAAWwB,KAAExC,QACxBuC,EAAAzB,EAAAC,cAAA,OAAKC,UAAWwB,KAAE8H,YACZlJ,EAAMmJ,OACFhI,EAAAzB,EAAAC,cAAA,OAAKC,UAAWwB,KAAEgI,MAAMjI,EAAAzB,EAAAC,cAAA,qBAAaK,EAAM9C,OAAWiE,EAAAzB,EAAAC,cAAA,UAASkG,QAAS7F,EAAMzC,QAAxB,WAAtD,KACA4D,EAAAzB,EAAAC,cAAC0B,EAAA,EAAD,CAASC,GAAI,UAAWH,EAAAzB,EAAAC,cAAA,mBAAxB,iBCHd/B,GAAe,CACf/B,OAAQ,KACRsB,MAAO,KACPD,MAAO,KACPiM,QAAQ,EACRE,WAAY,MA6BHC,GAAkB,SAACzN,EAAuBsB,EAAsBD,EAAsBiM,GAApE,MAAoH,CAC/I/K,KAtCkB,oCAsCGmL,QACjB,CAAC1N,SAAQsB,QAAOD,QAAOiM,YAQlBK,GAAuB,SAACH,GAAD,MAAyD,CACzFjL,KA/C4B,8CA+CGmL,QAAS,CAACF,gBAGhCI,GAAkB,iCAAAvK,EAAAT,OAAAoE,EAAA,EAAApE,CAAAqE,EAAApD,EAAAqD,KAAM,SAAA4F,EAAO1F,GAAP,IAAAyG,EAAAC,EAAA7L,EAAA8L,EAAAzM,EAAA,OAAA2F,EAAApD,EAAA0D,KAAA,SAAAyF,GAAA,cAAAA,EAAAvF,KAAAuF,EAAAtF,MAAA,cAAAsF,EAAAtF,KAAA,EACdjJ,IAAQ0C,KADM,QAC7B0M,EAD6Bb,EAAArF,MAGtBC,aAAerJ,IAAgByP,UAASF,EACtBD,EAAO/N,KAA3BmC,EAD0C6L,EAC1C7L,GAAIZ,EADsCyM,EACtCzM,MAAOC,EAD+BwM,EAC/BxM,MAChB8F,EAASqG,GAAgBxL,EAAIX,EAAOD,GAAO,KALd,wBAAA2L,EAAAnF,SAAAiF,MAAN,gBAAAI,GAAA,OAAA7J,EAAA6E,MAAAC,KAAA7I,YAAA,IAwBlBqC,GAAgB,iCAAAyK,EAAAxJ,OAAAoE,EAAA,EAAApE,CAAAqE,EAAApD,EAAAqD,KAAM,SAAAmF,EAAOjF,GAAP,IAAAvH,EAAA2N,EAAA,OAAAvG,EAAApD,EAAA0D,KAAA,SAAA+E,GAAA,cAAAA,EAAA7E,KAAA6E,EAAA5E,MAAA,cAAA4E,EAAA5E,KAAA,EACRhJ,IAAYiD,gBADJ,OACzB9B,EADyByM,EAAA3E,KAEzB6F,EAAa3N,EAASC,KAAKmO,IACjC7G,EAASuG,GAAqBH,IAHC,wBAAAlB,EAAAzE,SAAAwE,MAAN,gBAAAvE,GAAA,OAAAsE,EAAAlE,MAAAC,KAAA7I,YAAA,IAgBd4O,GA9EK,WAAyD,IAAxDzL,EAAwDnD,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAhDyC,GAAcW,EAAkCpD,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACzE,OAAQkD,EAAOH,MACX,IAfc,oCAgBd,IAfwB,8CAgBpB,OAAOK,OAAAuD,EAAA,EAAAvD,QAAAuD,EAAA,EAAAvD,CAAA,GACAH,GACAC,EAAOgL,SAElB,QACI,OAAOjL,ICpBb0L,0KAIE,OAAO7I,EAAAzB,EAAAC,cAACsK,GAAWjG,KAAKhE,cAJF6H,IAAMC,WAYrBE,eALS,SAAC1J,GAAD,MAAY,CAChC6K,OAAQ7K,EAAM4L,KAAKf,OACnBjM,MAAOoB,EAAM4L,KAAKhN,QAGkB,CAACK,ODqEnB,iCAAA+K,EAAA7J,OAAAoE,EAAA,EAAApE,CAAAqE,EAAApD,EAAAqD,KAAM,SAAAwF,EAAOtF,GAAP,OAAAH,EAAApD,EAAA0D,KAAA,SAAAoF,GAAA,cAAAA,EAAAlF,KAAAkF,EAAAjF,MAAA,cAAAiF,EAAAjF,KAAA,EACHjJ,IAAQiD,SADL,OAGS,IAHTiL,EAAAhF,KAGX7H,KAAK8H,YACdR,EAASqG,GAAgB,KAAM,KAAM,MAAM,IAJvB,wBAAAd,EAAA9E,SAAA6E,MAAN,gBAAA3E,GAAA,OAAA0E,EAAAvE,MAAAC,KAAA7I,YAAA,KCrEP6M,CAAmCgC,yECe5CG,GAAiBC,aAAU,CAACC,KAAM,SAAjBD,CAtBL,SAAAlL,GAAuC,IAArCoL,EAAqCpL,EAArCoL,aAAczL,EAAuBK,EAAvBL,MAAOwK,EAAgBnK,EAAhBmK,WACrC,OACIlI,EAAAzB,EAAAC,cAAA,QAAM4K,SAAUD,GACXhK,aAAY,QAAS,QAAS,CAACkK,MAAWnK,MAC1CC,aAAY,WAAY,WAAY,CAACkK,MAAWnK,KAAO,CAACjC,KAAM,aAC9DkC,aAAY,KAAM,aAAc,GAAID,KAAO,CAACjC,KAAM,YAAa,eAE9DiL,GAAclI,EAAAzB,EAAAC,cAAA,OAAK0G,IAAKgD,IACxBA,GAAe/I,aAAY,qBAAsB,UAAW,CAACkK,MAAWnK,KAAO,IAGhFxB,GAASsC,EAAAzB,EAAAC,cAAA,OAAKC,UAAW6K,KAAMC,kBAC3B7L,GAGLsC,EAAAzB,EAAAC,cAAA,WACIwB,EAAAzB,EAAAC,cAAA,2BA2BDqI,eALS,SAAC1J,GAAD,MAAY,CAChC+K,WAAY/K,EAAM4L,KAAKb,WACvBF,OAAQ7K,EAAM4L,KAAKf,SAGiB,CAACjM,MFUpB,SAACC,EAAeC,EAAkBC,EAAqBC,GAAvD,sBAAAsF,EAAAnE,OAAAoE,EAAA,EAAApE,CAAAqE,EAAApD,EAAAqD,KAA2E,SAAAC,EAAOC,GAAP,IAAAtH,EAAAsC,EAAA,OAAA6E,EAAApD,EAAA0D,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAC3EjJ,IAAQ4C,MAAMC,EAAOC,EAAUC,EAAYC,GADgC,QACxF3B,EADwF0H,EAAAG,MAEnFC,aAAerJ,IAAgByP,QAEpC5G,EAASwG,OAEL9N,EAAK8H,aAAepJ,IAAqBsQ,mBACzC1H,EAASzF,MAGTS,EAAUtC,EAAKqC,SAAS5C,OAAS,EAAIO,EAAKqC,SAAS,GAAK,aAC5DiF,EAAS2H,aAAW,QAAS,CAACC,OAAQ5M,MAXkD,wBAAAoF,EAAAK,SAAAV,MAA3E,gBAAAgG,GAAA,OAAApG,EAAAmB,MAAAC,KAAA7I,YAAA,KEVN6M,CAnBD,SAAChI,GAKX,OAAIA,EAAMmJ,OACChI,EAAAzB,EAAAC,cAACmL,EAAA,EAAD,CAAUxJ,GAAI,aAGlBH,EAAAzB,EAAAC,cAAA,WACHwB,EAAAzB,EAAAC,cAAA,MAAIC,UAAWwB,KAAExC,QAAjB,SACAuC,EAAAzB,EAAAC,cAACwK,GAAD,CAAgBI,SAVH,SAAC7N,GACdsD,EAAM9C,MAAMR,EAASS,MAAOT,EAASU,SAAUV,EAASW,WAAYX,EAASY,UASzC+L,WAAYrJ,EAAMqJ,gBCpC1DzL,GAAiC,CACjCmN,aAAa,GAiCFC,GA9BI,WAAyD,IAAxD1M,EAAwDnD,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAhDyC,GACxB,QADwEzC,UAAAC,OAAA,EAAAD,UAAA,QAAAE,GACzD+C,MACX,IAboB,yCAchB,OAAOK,OAAAuD,EAAA,EAAAvD,QAAAuD,EAAA,EAAAvD,CAAA,GACAH,GADP,IAEIyM,aAAa,IAGrB,QACI,OAAOzM,uBCtBfV,GAAe,GAMJqN,GAJQ,WAAuC,IAAtC3M,EAAsCnD,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAA9ByC,GAA8BzC,UAAAC,OAAA,GAAAD,UAAA,GAC1D,OAAOmD,uBCOP4M,GAAcC,YAAgB,CAC9BC,YAAaC,KACbC,YAAajN,KACbkN,QAASN,GACTjE,UAAW/C,EACXiG,KAAMH,GACNM,KAAMmB,KACNC,IAAKT,KAOHU,GAAmB5K,OAAO6K,sCAAwC5D,IAElE6D,GAAQC,YAAYX,GAAcQ,GAAiBI,YAAgBC,QAEzEjL,OAAOkL,UAAYJ,GAEJA,UC1BFK,GAAe,SAACnE,GACzB,OAAO,SAAC9H,GACJ,OAAOmB,EAAAzB,EAAAC,cAACwB,EAAAzB,EAAMwM,SAAP,CAAgBC,SAAUhL,EAAAzB,EAAAC,cAAA,0BAC7BwB,EAAAzB,EAAAC,cAACmI,EAAc9H,2BCAZoM,GAJQ,WACrB,OAAOjL,EAAAzB,EAAAC,cAAA,OAAKC,UAAWwB,KAAEvC,OAAlB,qBCAYwN,+MAEnB/N,MAAQ,CACNkB,UAAU,qEAIVwE,KAAKsI,SAAS,CAAE9M,UAAU,qCAI1B,OAAIwE,KAAK1F,MAAMkB,SACN2B,EAAAzB,EAAAC,cAAC4M,GAAD,MAGFvI,KAAKhE,MAAMT,gBAfqBuI,aCYrC0E,GAAmB3E,IAAM4E,KAAK,kBAAM1S,EAAAmM,EAAA,GAAAzK,KAAA1B,EAAAqO,KAAA,aACpCsE,GAAmB7E,IAAM4E,KAAK,kBAAM1S,EAAAmM,EAAA,GAAAzK,KAAA1B,EAAAqO,KAAA,aAGpCuE,qLAGE3I,KAAKhE,MAAM4M,iDAKX,OAAK5I,KAAKhE,MAAM+K,YAKZ5J,EAAAzB,EAAAC,cAAA,OAAKC,UAAU,eACXuB,EAAAzB,EAAAC,cAACkN,GAAD,MACA1L,EAAAzB,EAAAC,cAACmN,EAAD,MACA3L,EAAAzB,EAAAC,cAAA,OAAKC,UAAU,uBACXuB,EAAAzB,EAAAC,cAACoN,EAAA,EAAD,KACI5L,EAAAzB,EAAAC,cAACqN,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IACXC,OAAQ,kBAAMhM,EAAAzB,EAAAC,cAACmL,EAAA,EAAD,CAAUxJ,GAAI,gBAEnCH,EAAAzB,EAAAC,cAACqN,EAAA,EAAD,CAAOE,KAAK,WACLC,OAAQlB,GAAaO,MAE5BrL,EAAAzB,EAAAC,cAACqN,EAAA,EAAD,CAAOE,KAAK,oBACLC,OAAQlB,GAAaS,MAE5BvL,EAAAzB,EAAAC,cAACqN,EAAA,EAAD,CAAOE,KAAK,SACLC,OAAQ,kBAAMhM,EAAAzB,EAAAC,cAACyN,GAAD,SAErBjM,EAAAzB,EAAAC,cAACqN,EAAA,EAAD,CAAOE,KAAK,SACLC,OAAQ,kBAAMhM,EAAAzB,EAAAC,cAAC0N,GAAD,SAEpBlM,EAAAzB,EAAAC,cAACmL,EAAA,EAAD,CAAUwC,KAAK,IAAIhM,GAAG,gBAxB5BH,EAAAzB,EAAAC,cAAA,OAAKC,UAAW,QAAOuB,EAAAzB,EAAAC,cAACgI,EAAA,EAAD,cATxBG,aA8CdyF,GAAexF,YACfyF,IACAxF,YANoB,SAAC1J,GAAD,MAAY,CAChCyM,YAAazM,EAAMmN,IAAIV,cAKE,CAAC6B,cNnCD,kBAAM,SAAC3J,GAChC,IAAIwK,EAAUxK,EAASwG,MAEvBiE,QAAQC,IAAI,CAACF,IACRhS,KAAK,WACFwH,EAP2D,CAAC7E,KA7B5C,iDMgET2J,CAE4B4E,IAYhCiB,GAVM,SAAC5N,GAClB,OAAOmB,EAAAzB,EAAAC,cAACkO,EAAA,EAAD,KACP1M,EAAAzB,EAAAC,cAACmO,GAAD,KACI3M,EAAAzB,EAAAC,cAACoO,EAAA,EAAD,CAAUnC,MAAOA,IACbzK,EAAAzB,EAAAC,cAAC4N,GAAD,UCnEZS,IAASb,OAAOhM,EAAAzB,EAAAC,cAACsO,GAAD,MAAiBC,SAASC,eAAe,SpB0HnD,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM7S,KAAK,SAAA8S,GACjCA,EAAaC,mCqBlInB/Q,EAAAC,QAAA,CAAkB8I,UAAA,yBAAAZ,OAAA,sBAAAQ,KAAA,yCCAlB3I,EAAAC,QAAA,CAAkBiI,UAAA,6BAAAK,WAAA,8BAAAD,aAAA,gCAAAH,OAAA,4DCDlB,IAAA6I,EAAA1U,EAAA,GAAA2U,EAAA3U,EAAAW,EAAA+T,GAAA1U,EAAA,KAYe4N,IATC,SAAC3H,GACb,OAAQ0O,EAAAhP,EAAAC,cAAA,OAAKC,UAAU,4CAA2C8O,EAAAhP,EAAAC,cAAA,OAAKC,UAAU,mBACjF8O,EAAAhP,EAAAC,cAAA,YACA+O,EAAAhP,EAAAC,cAAA,YACA+O,EAAAhP,EAAAC,cAAA,WAAK+O,EAAAhP,EAAAC,cAAA,aACL+O,EAAAhP,EAAAC,cAAA,WAAK+O,EAAAhP,EAAAC,cAAA,iDCRT5F,EAAAC,EAAAC,EAAA,sBAAAuQ,IAAAzQ,EAAAC,EAAAC,EAAA,sBAAA0U,IAAO,IAAMnE,EAAW,SAAAoE,GACpB,IAAIA,EAEJ,MAAO,qBAGED,EAAmB,SAACE,GAAD,OAAe,SAACD,GAC5C,GAAIA,EAAMxT,OAASyT,EAAW,uBAAArT,OAAwBqT,EAAxB,kCCNlCpR,EAAAC,QAAA,CAAkBoC,YAAA,mCAAAjB,MAAA,6BAAA6L,iBAAA,6DCAlBjN,EAAAC,QAAA,CAAkBkB,OAAA,uBAAAsK,WAAA,2BAAAE,KAAA,kTCIZ0F,EAAW,kCAEXC,EAAa,oCACbC,EAAc,qCAGhBpR,EAAe,CACfqR,MAAO,CACH,CAACnR,GAAI,EAAGG,QAAS,iBAAkBiR,WAAY,IAC/C,CAACpR,GAAI,EAAGG,QAAS,uBAAwBiR,WAAY,IACrD,CAACpR,GAAI,EAAGG,QAAS,8BAA+BiR,WAAY,IAC5D,CAACpR,GAAI,EAAGG,QAAS,gBAAiBiR,WAAY,KAElDnS,QAAS,KACTT,OAAQ,GACR6S,YAAa,IA6CJC,EAAuB,SAACD,GAAD,MAA0D,CAAC/Q,KAAM0Q,EAAUK,gBAUlGE,EAAY,SAAC/S,GAAD,MAA0C,CAAC8B,KAAM2Q,EAAYzS,WAYzEgT,EAAiB,SAACzT,GAAD,sBAAAqD,EAAAT,OAAA8Q,EAAA,EAAA9Q,CAAA+Q,EAAA9P,EAAAqD,KAAoB,SAAA4F,EAAO1F,GAAP,IAAAvH,EAAA,OAAA8T,EAAA9P,EAAA0D,KAAA,SAAAyF,GAAA,cAAAA,EAAAvF,KAAAuF,EAAAtF,MAAA,cAAAsF,EAAAtF,KAAA,EACvBrJ,IAAS+B,WAAWJ,GADG,OACxCH,EADwCmN,EAAArF,KAE9CP,EAnB+E,CAAC7E,KAhE3D,0CAgEmFrB,QAmBhFrB,EAASC,OAFa,wBAAAkN,EAAAnF,SAAAiF,MAApB,gBAAAI,GAAA,OAAA7J,EAAA6E,MAAAC,KAAA7I,YAAA,IAKjBiB,EAAY,SAACP,GAAD,sBAAA+G,EAAAnE,OAAA8Q,EAAA,EAAA9Q,CAAA+Q,EAAA9P,EAAAqD,KAAoB,SAAAC,EAAOC,GAAP,IAAAvH,EAAA,OAAA8T,EAAA9P,EAAA0D,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACpBpJ,IAAWiC,UAAUP,GADD,OACrCH,EADqC2H,EAAAG,KAEzCP,EAASoM,EAAU3T,EAASC,OAFa,wBAAA0H,EAAAK,SAAAV,MAApB,gBAAAgG,GAAA,OAAApG,EAAAmB,MAAAC,KAAA7I,YAAA,IAKZkB,EAAe,SAACC,GAAD,sBAAA2L,EAAAxJ,OAAA8Q,EAAA,EAAA9Q,CAAA+Q,EAAA9P,EAAAqD,KAAoB,SAAAmF,EAAOjF,GAAP,OAAAuM,EAAA9P,EAAA0D,KAAA,SAAA+E,GAAA,cAAAA,EAAA7E,KAAA6E,EAAA5E,MAAA,cAAA4E,EAAA7E,KAAA,EAAA6E,EAAA5E,KAAA,EAEnBpJ,IAAWkC,aAAaC,GAFL,OAIP,IAJO6L,EAAA3E,KAI3B7H,KAAK8H,YACdR,EAASoM,EAAU/S,IALiB6L,EAAA5E,KAAA,eAAA4E,EAAA7E,KAAA,EAAA6E,EAAAsH,GAAAtH,EAAA,iCAAAA,EAAAzE,SAAAwE,EAAA,iBAApB,gBAAAvE,GAAA,OAAAsE,EAAAlE,MAAAC,KAAA7I,YAAA,IAWfqB,EAAY,SAACkT,GAAD,sBAAApH,EAAA7J,OAAA8Q,EAAA,EAAA9Q,CAAA+Q,EAAA9P,EAAAqD,KAAe,SAAAwF,EAAOtF,GAAP,IAAAvH,EAAA,OAAA8T,EAAA9P,EAAA0D,KAAA,SAAAoF,GAAA,cAAAA,EAAAlF,KAAAkF,EAAAjF,MAAA,cAAAiF,EAAAjF,KAAA,EACfpJ,IAAWqC,UAAUkT,GADN,OAGH,KAF7BhU,EADgC8M,EAAAhF,MAGvB7H,KAAK8H,YACdR,EA3BiD,CAAC7E,KA5E/B,4CA4EyDkI,OA2BlD5K,EAASC,KAAKA,KAAK2K,SAJb,wBAAAkC,EAAA9E,SAAA6E,MAAf,gBAAA3E,GAAA,OAAA0E,EAAAvE,MAAAC,KAAA7I,YAAA,IAOZ2B,EAAc,SAACC,GAAD,sBAAA4S,EAAAlR,OAAA8Q,EAAA,EAAA9Q,CAAA+Q,EAAA9P,EAAAqD,KAA0B,SAAA6M,EAAO3M,EAAe2F,GAAtB,IAAA/M,EAAAH,EAAA,OAAA8T,EAAA9P,EAAA0D,KAAA,SAAAyM,GAAA,cAAAA,EAAAvM,KAAAuM,EAAAtM,MAAA,cAC3C1H,EAAS+M,IAAWsB,KAAKrO,OADkBgU,EAAAtM,KAAA,EAE1BpJ,IAAW2C,YAAYC,GAFG,UAIhB,KAF3BrB,EAF2CmU,EAAArM,MAIpC7H,KAAK8H,WAJ+B,CAAAoM,EAAAtM,KAAA,QAK7CN,EAASqM,EAAezT,IALqBgU,EAAAtM,KAAA,uBAO7CN,EAAS2H,YAAW,eAAgB,CAACC,OAAQnP,EAASC,KAAKqC,SAAS,MAPvB6R,EAAAC,OAAA,SAQtCpC,QAAQqC,OAAOrU,EAASC,KAAKqC,SAAS,KARA,yBAAA6R,EAAAnM,SAAAkM,MAA1B,gBAAA/L,EAAAC,GAAA,OAAA6L,EAAA5L,MAAAC,KAAA7I,YAAA,IAYZkQ,IAvGQ,WAAyD,IAAxD/M,EAAwDnD,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAhDyC,EAAcW,EAAkCpD,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAE5E,OAAQkD,EAAOH,MACX,KAAK0Q,EACD,IAAIkB,EAAU,CACVlS,GAAI,EACJG,QAASM,EAAO4Q,YAChBD,WAAY,GAEhB,OAAOzQ,OAAAwR,EAAA,EAAAxR,QAAAwR,EAAA,EAAAxR,CAAA,GACAH,GADP,IAEI2Q,MAAK,GAAAzT,OAAAiD,OAAAyR,EAAA,EAAAzR,CAAMH,EAAM2Q,OAAZ,CAAmBe,IACxBb,YAAa,KAGrB,KAAKJ,EACD,OAAOtQ,OAAAwR,EAAA,EAAAxR,QAAAwR,EAAA,EAAAxR,CAAA,GACAH,GADP,IAEIhC,OAAQiC,EAAOjC,SAGvB,IAvCiB,0CAwCb,OAAOmC,OAAAwR,EAAA,EAAAxR,QAAAwR,EAAA,EAAAxR,CAAA,GAAIH,GAAX,IAAkBvB,QAASwB,EAAOxB,UAGtC,KAAKiS,EACD,OAAOvQ,OAAAwR,EAAA,EAAAxR,QAAAwR,EAAA,EAAAxR,CAAA,GAAIH,GAAX,IAAkB2Q,MAAO3Q,EAAM2Q,MAAM5K,OAAO,SAAA1G,GAAC,OAAIA,EAAEG,IAAMS,EAAO4R,WAEpE,IA3CmB,4CA4Cf,OAAO1R,OAAAwR,EAAA,EAAAxR,QAAAwR,EAAA,EAAAxR,CAAA,GAAIH,GAAX,IAAkBvB,QAAQ0B,OAAAwR,EAAA,EAAAxR,QAAAwR,EAAA,EAAAxR,CAAA,GAAKH,EAAMvB,SAAZ,IAAqBuJ,OAAQ/H,EAAO+H,WAEjE,QACI,OAAOhI","file":"static/js/main.a6523dc0.chunk.js","sourcesContent":["import axios, {AxiosResponse} from \"axios\";\r\nimport {ProfileType} from '../types/types';\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers:     {\r\n        \"API-KEY\": \"805fc6206fbaeec-1e18-453e-af84-9-bd4f-400b-b9bd-106cc3d4ec2a\"\r\n    }\r\n});\r\n\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage = 1, pageSize = 10) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => {\r\n                return response.data;\r\n            });\r\n    },\r\n    follow(userId: number) {\r\n        return instance.post(`follow/${userId}`)\r\n    },\r\n    unfollow(userId: number) {\r\n        return instance.delete(`follow/${userId}`)\r\n    },\r\n    getProfile(userId: number) {\r\n        console.warn('Obsolete method. Please profileAPI object.')\r\n        return profileAPI.getProfile(userId);\r\n    }\r\n}\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId: number) {\r\n        return instance.get(`profile/` + userId);\r\n    },\r\n    getStatus(userId: number) {\r\n        return instance.get(`profile/status/` + userId);\r\n    },\r\n    updateStatus(status: string) {\r\n        return instance.put(`profile/status`, { status: status });\r\n    },\r\n    savePhoto(photoFile: any) {\r\n        const formData = new FormData();\r\n        formData.append(\"image\", photoFile);\r\n\r\n        return instance.put(`profile/photo`, formData, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        });\r\n    },\r\n    saveProfile(profile: ProfileType) {\r\n        return instance.put(`profile`, profile );\r\n    }\r\n}\r\n\r\nexport enum ResultCodesEnum {\r\n    Success = 0,\r\n    Error = 1\r\n}\r\n\r\nexport enum ResultCodeForCapctha {\r\n    CaptchaIsRequired = 10\r\n}\r\n\r\n\r\ntype MeResponseType = {\r\n    data: {\r\n        id: number\r\n        email: string\r\n        login: string\r\n    }\r\n    resultCode: ResultCodesEnum\r\n    messages: Array<string>\r\n}\r\n\r\ntype LoginResponseType = {\r\n    data: {\r\n        userId: number\r\n    }\r\n    resultCode: ResultCodesEnum | ResultCodeForCapctha\r\n    messages: Array<string>\r\n}\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get<MeResponseType>(`auth/me`).then(res => res.data);\r\n    },\r\n    login(email: string, password: string, rememberMe = false, captcha: null | string = null ) {\r\n        return instance.post<LoginResponseType>(`auth/login`, { email, password, rememberMe, captcha })\r\n            .then(res => res.data);\r\n    },\r\n    logout() {\r\n        return instance.delete(`auth/login`);\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const securityAPI = {\r\n    getCaptchaUrl() {\r\n        return instance.get(`security/get-captcha-url`);\r\n    }\r\n}\r\n\r\n\r\n","module.exports = __webpack_public_path__ + \"static/media/user.d48a8973.png\";","const SEND_MESSAGE = 'social-network/dialogs/SEND_MESSAGE'\r\n\r\ntype DialogType = {\r\n    id: number\r\n    name: string\r\n}\r\ntype MessageType = {\r\n    id: number\r\n    message: string\r\n}\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        {id: 1, name: 'Dimych'},\r\n        {id: 2, name: 'Andrew'},\r\n        {id: 3, name: 'Sveta'},\r\n        {id: 4, name: 'Sasha'},\r\n        {id: 5, name: 'Viktor'},\r\n        {id: 6, name: 'Valera'}\r\n    ] as Array<DialogType>,\r\n    messages: [\r\n        {id: 1, message: 'Hi'},\r\n        {id: 2, message: 'How is your it-kamasutra?'},\r\n        {id: 3, message: 'Yo'},\r\n        {id: 4, message: 'Yo'},\r\n        {id: 5, message: 'Yo'}\r\n    ] as Array<MessageType>\r\n}\r\n\r\nexport type InitialStateType = typeof initialState\r\n\r\nconst dialogsReducer = (state = initialState, action: any): InitialStateType => {\r\n    switch (action.type) {\r\n        case SEND_MESSAGE:\r\n            let body = action.newMessageBody;\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, {id: 6, message: body}]\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\ntype SendMessageCreatorActionType = {\r\n    type: typeof SEND_MESSAGE\r\n    newMessageBody: string\r\n}\r\n\r\nexport const sendMessageCreator = (newMessageBody: string): SendMessageCreatorActionType => ({type: SEND_MESSAGE, newMessageBody})\r\n\r\n\r\nexport default dialogsReducer;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Login_header__2XUI8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"error-indicator_error__27j4X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__3Gmzw\",\"item\":\"Navbar_item__1AHSL\",\"activeLink\":\"Navbar_activeLink__3Sn_M\"};","import React from \"react\";\r\nimport styles from \"./FormsControls.module.css\";\r\nimport {required} from \"../../../utils/validators/validators\";\r\nimport {Field} from \"redux-form\";\r\n\r\nconst FormControl = ({input, meta: {touched, error}, children}) => {\r\n    const hasError = touched && error;\r\n    return (\r\n        <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\r\n            <div>\r\n                {children}\r\n            </div>\r\n            {hasError && <span>{error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}><textarea {...input} {...restProps} /></FormControl>\r\n}\r\n\r\nexport const Input = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}><input {...input} {...restProps} /></FormControl>\r\n}\r\n\r\nexport const createField = (placeholder, name, validators, component, props = {}, text = \"\") => (\r\n    <div>\r\n        <Field placeholder={placeholder} name={name}\r\n               validate={validators}\r\n               component={component}\r\n               {...props}\r\n        /> {text}\r\n    </div>\r\n)","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport s from './Navbar.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className={s.nav}>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/profile\" activeClassName={s.activeLink}>Profile</NavLink>\r\n            </div>\r\n            <div className={`${s.item} ${s.active}`}>\r\n                <NavLink to=\"/dialogs\" activeClassName={s.activeLink}>Messages</NavLink>\r\n            </div>\r\n            <div className={`${s.item} ${s.active}`}>\r\n                <NavLink to=\"/users\" activeClassName={s.activeLink}>Users</NavLink>\r\n            </div>\r\n\r\n            <div className={s.item}>\r\n                <a>News</a>\r\n            </div>\r\n            <div className={s.item}>\r\n                <a>Music</a>\r\n            </div>\r\n            <div className={s.item}>\r\n                <a>Settings</a>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar;","\r\nexport const updateObjectInArray = (items, itemId, objPropName, newObjProps) => {\r\n    return items.map(u => {\r\n        if (u[objPropName] === itemId) {\r\n            return {...u, ...newObjProps}\r\n        }\r\n        return u;\r\n    })\r\n}\r\n","import {usersAPI} from \"../api/api\";\r\nimport {updateObjectInArray} from \"../utils/object-helpers\";\r\nimport {PhotosType, UserType} from '../types/types';\r\nimport {AppStateType} from './redux-store';\r\nimport {Dispatch} from 'redux';\r\nimport {ThunkAction} from 'redux-thunk';\r\n\r\nconst FOLLOW = 'social-network/users/FOLLOW';\r\nconst UNFOLLOW = 'social-network/users/UNFOLLOW';\r\nconst SET_USERS = 'social-network/users/SET_USERS';\r\nconst SET_CURRENT_PAGE = 'social-network/users/SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'social-network/users/SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'social-network/users/TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'social-network/users/TOGGLE_IS_FOLLOWING_PROGRESS';\r\n\r\n\r\nlet initialState = {\r\n    users: [] as Array<UserType>,\r\n    pageSize: 10,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: [] as Array<number>, //array of users ids\r\n};\r\n\r\ntype InitialState = typeof initialState;\r\n\r\nconst usersReducer = (state = initialState, action: ActionsTypes): InitialState => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: true})\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: false})\r\n            }\r\n        case SET_USERS: {\r\n            return {...state, users: action.users}\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return {...state, currentPage: action.currentPage}\r\n        }\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return {...state, totalUsersCount: action.count}\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return {...state, isFetching: action.isFetching}\r\n        }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id != action.userId)\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\ntype ActionsTypes = FollowSuccessActionType | UnfollowSuccessActionType | SetUsersActionType |\r\n    SetCurrentPageActionType | SetTotalUsersCountActionType | ToggleIsFetchingActionType |\r\n    ToggleFollowingProgressActionType\r\n\r\ntype FollowSuccessActionType = {\r\n    type: typeof FOLLOW\r\n    userId: number\r\n}\r\nexport const followSuccess = (userId: number): FollowSuccessActionType => ({type: FOLLOW, userId})\r\ntype UnfollowSuccessActionType = {\r\n    type: typeof UNFOLLOW\r\n    userId: number\r\n}\r\nexport const unfollowSuccess = (userId: number): UnfollowSuccessActionType => ({type: UNFOLLOW, userId})\r\ntype SetUsersActionType = {\r\n    type: typeof SET_USERS\r\n    users: Array<UserType>\r\n}\r\nexport const setUsers = (users: Array<UserType>): SetUsersActionType => ({type: SET_USERS, users})\r\ntype SetCurrentPageActionType = {\r\n    type: typeof SET_CURRENT_PAGE\r\n    currentPage: number\r\n}\r\nexport const setCurrentPage = (currentPage: number): SetCurrentPageActionType => ({type: SET_CURRENT_PAGE, currentPage})\r\ntype SetTotalUsersCountActionType = {\r\n    type: typeof SET_TOTAL_USERS_COUNT\r\n    count: number\r\n}\r\nexport const setTotalUsersCount = (totalUsersCount: number): SetTotalUsersCountActionType => ({\r\n    type: SET_TOTAL_USERS_COUNT,\r\n    count: totalUsersCount\r\n})\r\ntype ToggleIsFetchingActionType = {\r\n    type: typeof TOGGLE_IS_FETCHING\r\n    isFetching: boolean\r\n}\r\nexport const toggleIsFetching = (isFetching: boolean): ToggleIsFetchingActionType => ({\r\n    type: TOGGLE_IS_FETCHING,\r\n    isFetching\r\n})\r\ntype ToggleFollowingProgressActionType = {\r\n    type: typeof TOGGLE_IS_FOLLOWING_PROGRESS\r\n    isFetching: boolean\r\n    userId: number\r\n}\r\n\r\n\r\nexport const toggleFollowingProgress = (isFetching: boolean, userId: number): ToggleFollowingProgressActionType => ({\r\n    type: TOGGLE_IS_FOLLOWING_PROGRESS,\r\n    isFetching,\r\n    userId\r\n})\r\n\r\ntype GetStateType = () => AppStateType\r\ntype DispatchType = Dispatch<ActionsTypes>\r\ntype ThunkType = ThunkAction<Promise<void>, AppStateType, unknown, ActionsTypes>\r\n\r\nexport const requestUsers = (page: number,\r\n                             pageSize: number): ThunkType => {\r\n    return async (dispatch, getState) => {\r\n        dispatch(setCurrentPage(page));\r\n\r\n        let data = await usersAPI.getUsers(page, pageSize);\r\n        dispatch(toggleIsFetching(false));\r\n        dispatch(setUsers(data.items));\r\n        dispatch(setTotalUsersCount(data.totalCount));\r\n    }\r\n}\r\n\r\nconst _followUnfollowFlow = async (dispatch: DispatchType,\r\n                                   userId: number,\r\n                                   apiMethod: any, actionCreator: (userId: number) => FollowSuccessActionType | UnfollowSuccessActionType) => {\r\n    dispatch(toggleFollowingProgress(true, userId));\r\n    let response = await apiMethod(userId);\r\n\r\n    if (response.data.resultCode == 0) {\r\n        dispatch(actionCreator(userId));\r\n    }\r\n    dispatch(toggleFollowingProgress(false, userId));\r\n}\r\n\r\nexport const follow = (userId: number): ThunkType => {\r\n    return async (dispatch) => {\r\n        _followUnfollowFlow(dispatch, userId, usersAPI.follow.bind(usersAPI), followSuccess);\r\n    }\r\n}\r\n\r\nexport const unfollow = (userId: number): ThunkType => {\r\n    return async (dispatch) => {\r\n        _followUnfollowFlow(dispatch, userId, usersAPI.unfollow.bind(usersAPI), unfollowSuccess);\r\n    }\r\n}\r\n\r\nexport default usersReducer;\r\n","import React, {useState} from 'react'\r\nimport styles from './Paginator.module.css'\r\nimport cn from 'classnames'\r\n\r\ntype PropsType = {\r\n    totalItemsCount: number\r\n    pageSize: number\r\n    currentPage: number\r\n    onPageChanged: (pageNumber: number) => void\r\n    portionSize?: number\r\n}\r\n\r\nlet Paginator: React.FC<PropsType> = ({totalItemsCount, pageSize,\r\n                                      currentPage,\r\n                                      onPageChanged,\r\n                                      portionSize = 10}) => {\r\n\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n\r\n    let pages: Array<number> = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionSize);\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n    let rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n\r\n    return <div className={cn(styles.paginator)}>\r\n        { portionNumber > 1 &&\r\n        <button className={styles.button} onClick={() => { setPortionNumber(portionNumber - 1) }}>PREV</button> }\r\n\r\n            {pages\r\n                .filter(p => p >= leftPortionPageNumber && p<=rightPortionPageNumber)\r\n                .map((p) => {\r\n                return <span className={ cn({\r\n                    [styles.selectedPage]: currentPage === p\r\n                }, styles.pageNumber) }\r\n                             key={p}\r\n                             onClick={(e) => {\r\n                                 onPageChanged(p);\r\n                             }}>{p}</span>\r\n            })}\r\n        { portionCount > portionNumber &&\r\n            <button className={styles.button} onClick={() => { setPortionNumber(portionNumber + 1) }}>NEXT</button> }\r\n\r\n\r\n    </div>\r\n}\r\n\r\nexport default Paginator;\r\n","import React from 'react';\r\nimport s from \"./users.module.css\";\r\nimport userPhoto from \"../../assets/images/user.png\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nlet User = ({user, followingInProgress, unfollow, follow}) => {\r\n    return (\r\n       <div>\r\n                <span>\r\n                    <div>\r\n                       <NavLink to={'/profile/' + user.id}>\r\n                        <img src={user.photos.small != null ? user.photos.small : userPhoto}\r\n                             className={s.userPhoto} />\r\n                       </NavLink>\r\n                    </div>\r\n                    <div>\r\n                        {user.followed\r\n                            ? <button className={s.button} disabled={followingInProgress\r\n                                .some(id => id === user.id)}\r\n                                      onClick={() => { unfollow(user.id) }}>\r\n                                Unfollow</button>\r\n                            : <button className={s.button} disabled={followingInProgress.some(id => id === user.id)}\r\n                                      onClick={() => { follow(user.id) }}>\r\n                                      Follow</button>}\r\n\r\n                    </div>\r\n                </span>\r\n                <span>\r\n                    <span>\r\n                        <h4>  {user.name}</h4>\r\n                        <h4> {user.status? user.status:\"no status\"}</h4>\r\n                    </span>\r\n                    <span>\r\n                    </span>\r\n                </span>\r\n            </div>)\r\n}\r\n\r\nexport default User;","import React, {FC} from 'react';\r\nimport Paginator from \"../common/Paginator/Paginator\";\r\nimport User from \"./User\";\r\nimport {UserType} from '../../types/types';\r\nimport s from \"./users.module.css\";\r\n\r\ntype PropsType = {\r\n    totalUsersCount: number\r\n    pageSize: number\r\n    currentPage: number\r\n    onPageChanged: (pageNumber: number) => void\r\n    users: Array<UserType>\r\n    followingInProgress: Array<number>\r\n    unfollow: (userId: number) => void\r\n    follow: (userId: number) => void\r\n}\r\n\r\n\r\nlet Users: FC<PropsType> = ({currentPage, totalUsersCount, pageSize, onPageChanged, users,\r\n                                ...props}) => {\r\n    return <div>\r\n        <Paginator currentPage={currentPage} onPageChanged={onPageChanged}\r\n                   totalItemsCount={totalUsersCount} pageSize={pageSize}/>\r\n        <div className={s.user}>\r\n            {\r\n                users.map(u => <User user={u}\r\n                                     followingInProgress={props.followingInProgress}\r\n                                     key={u.id}\r\n                                     unfollow={props.unfollow}\r\n                                     follow={props.follow}\r\n                    />\r\n                )\r\n            }\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default Users;\r\n","import {createSelector} from \"reselect\";\r\nimport { AppStateType } from \"./redux-store\";\r\n\r\nconst getUsersSelector = (state: AppStateType) => {\r\n    return state.usersPage.users;\r\n}\r\n\r\nexport const getUsers = createSelector(getUsersSelector,\r\n    (users) => {\r\n    return users.filter(u => true);\r\n})\r\n\r\nexport const getPageSize = (state: AppStateType) => {\r\n    return state.usersPage.pageSize;\r\n}\r\n\r\nexport const getTotalUsersCount = (state: AppStateType) => {\r\n    return state.usersPage.totalUsersCount;\r\n}\r\n\r\nexport const getCurrentPage = (state: AppStateType) => {\r\n    return state.usersPage.currentPage;\r\n}\r\n\r\nexport const getIsFetching = (state: AppStateType) => {\r\n    return state.usersPage.isFetching;\r\n}\r\nexport const getFollowingInProgress = (state: AppStateType) => {\r\n    return state.usersPage.followingInProgress;\r\n}\r\n\r\nexport const countSomethingDifficult = (state: AppStateType) => {\r\n    debugger\r\n    //for... math... big arrays\r\n    let count = 23;\r\n    return count;\r\n}\r\n","import React from 'react';\r\nimport {connect, DefaultRootState} from 'react-redux';\r\nimport {\r\n    follow,\r\n    setCurrentPage,\r\n    unfollow, toggleFollowingProgress, requestUsers\r\n} from '../../redux/users-reducer';\r\nimport Users from './Users';\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    getCurrentPage,\r\n    getFollowingInProgress,\r\n    getIsFetching,\r\n    getPageSize,\r\n    getTotalUsersCount, getUsers\r\n} from \"../../redux/users-selectors\";\r\nimport { UserType } from '../../types/types';\r\nimport { AppStateType } from '../../redux/redux-store';\r\n\r\ntype MapStatePropsType = {\r\n    currentPage: number\r\n    pageSize: number\r\n    isFetching: boolean\r\n    totalUsersCount: number\r\n    users: Array<UserType>\r\n    followingInProgress: Array<number>\r\n}\r\n\r\ntype MapDispatchPropsType = {\r\n    getUsers: (currentPage: number, pageSize: number) => void\r\n    unfollow: (userId: number) => void\r\n    follow: (userId: number) => void\r\n}\r\n\r\ntype OwnPropsType = {\r\n    pageTitle: string\r\n}\r\n\r\ntype PropsType = MapStatePropsType & MapDispatchPropsType & OwnPropsType\r\n\r\nclass UsersContainer extends React.Component<PropsType> {\r\n    componentDidMount() {\r\n        const {currentPage, pageSize} = this.props;\r\n        this.props.getUsers(currentPage, pageSize);\r\n    }\r\n\r\n    onPageChanged = (pageNumber: number) => {\r\n        const {pageSize} = this.props;\r\n        this.props.getUsers(pageNumber, pageSize);\r\n    }\r\n\r\n    render() {\r\n\r\n        return <>\r\n            <h2>{this.props.pageTitle}</h2>\r\n            {this.props.isFetching ? <Preloader/> : null}\r\n            <Users totalUsersCount={this.props.totalUsersCount}\r\n                   pageSize={this.props.pageSize}\r\n                   currentPage={this.props.currentPage}\r\n                   onPageChanged={this.onPageChanged}\r\n                   users={this.props.users}\r\n                   follow={this.props.follow}\r\n                   unfollow={this.props.unfollow}\r\n                   followingInProgress={this.props.followingInProgress}\r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state: AppStateType): MapStatePropsType => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state)\r\n    }\r\n}\r\n\r\n\r\nexport default compose(\r\n    // TStateProps = {}, TDispatchProps = {}, TOwnProps = {}, State = DefaultRootState\r\n    connect<MapStatePropsType, MapDispatchPropsType, OwnPropsType, AppStateType>(\r\n        mapStateToProps,\r\n        {follow, unfollow, getUsers: requestUsers})\r\n)(UsersContainer)\r\n","import React from 'react';\r\nimport s from './Header.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Header = (props) => {\r\n    return <header className={s.header}>\r\n        <div className={s.loginBlock}>\r\n            { props.isAuth\r\n                ? <div className={s.logo}><h2>Welcome {props.login}</h2><button  onClick={props.logout}>Log out</button> </div>\r\n                : <NavLink to={'/login'} ><h2>Login</h2> </NavLink> }\r\n        </div>\r\n    </header>\r\n}\r\n\r\nexport default Header;","import {authAPI, ResultCodeForCapctha, ResultCodesEnum, securityAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_USER_DATA = 'social-network/auth/SET_USER_DATA';\r\nconst GET_CAPTCHA_URL_SUCCESS = 'social-network/auth/GET_CAPTCHA_URL_SUCCESS';\r\n\r\nlet initialState = {\r\n    userId: null as (number | null),\r\n    email: null as string | null,\r\n    login: null as string | null,\r\n    isAuth: false,\r\n    captchaUrl: null as string | null// if null, then captcha is not required\r\n};\r\n\r\nexport type InitialStateType = typeof initialState;\r\n\r\nconst authReducer = (state = initialState, action: any): InitialStateType => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n        case GET_CAPTCHA_URL_SUCCESS:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\ntype SetAuthUserDataActionPayloadType = {\r\n    userId: number | null,\r\n    email: string | null,\r\n    login: string | null,\r\n    isAuth: boolean\r\n}\r\ntype SetAuthUserDataActionType = {\r\n    type: typeof SET_USER_DATA,\r\n    payload: SetAuthUserDataActionPayloadType\r\n}\r\n\r\nexport const setAuthUserData = (userId: number | null, email: string | null, login: string | null, isAuth: boolean): SetAuthUserDataActionType => ({\r\n    type: SET_USER_DATA, payload:\r\n        {userId, email, login, isAuth}\r\n});\r\n\r\ntype GetCaptchaUrlSuccessActionType = {\r\n    type: typeof GET_CAPTCHA_URL_SUCCESS\r\n    payload: { captchaUrl: string }\r\n}\r\n\r\nexport const getCaptchaUrlSuccess = (captchaUrl: string): GetCaptchaUrlSuccessActionType => ({\r\n    type: GET_CAPTCHA_URL_SUCCESS, payload: {captchaUrl}\r\n});\r\n\r\nexport const getAuthUserData = () => async (dispatch: any) => {\r\n    let meData = await authAPI.me();\r\n\r\n    if (meData.resultCode === ResultCodesEnum.Success) {\r\n        let {id, login, email} = meData.data;\r\n        dispatch(setAuthUserData(id, email, login, true));\r\n    }\r\n}\r\n\r\nexport const login = (email: string, password: string, rememberMe: boolean, captcha: string) => async (dispatch: any) => {\r\n    let data = await authAPI.login(email, password, rememberMe, captcha);\r\n    if (data.resultCode === ResultCodesEnum.Success) {\r\n        // success, get auth data\r\n        dispatch(getAuthUserData())\r\n    } else {\r\n        if (data.resultCode === ResultCodeForCapctha.CaptchaIsRequired) {\r\n            dispatch(getCaptchaUrl());\r\n        }\r\n\r\n        let message = data.messages.length > 0 ? data.messages[0] : \"Some error\";\r\n        dispatch(stopSubmit(\"login\", {_error: message}));\r\n    }\r\n}\r\n\r\nexport const getCaptchaUrl = () => async (dispatch: any) => {\r\n    const response = await securityAPI.getCaptchaUrl();\r\n    const captchaUrl = response.data.url;\r\n    dispatch(getCaptchaUrlSuccess(captchaUrl));\r\n}\r\n\r\n\r\n\r\nexport const logout = () => async (dispatch: any) => {\r\n    let response = await authAPI.logout();\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setAuthUserData(null, null, null, false));\r\n    }\r\n}\r\n\r\nexport default authReducer;\r\n","import React from 'react';\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {logout} from \"../../redux/auth-reducer\";\r\n\r\nclass HeaderContainer extends React.Component {\r\n\r\n\r\n    render() {\r\n        return <Header {...this.props} />\r\n    }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login,\r\n});\r\n\r\nexport default connect(mapStateToProps, {logout})(HeaderContainer);","import React from 'react';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {createField, Input} from \"../common/FormsControls/FormsControls\";\r\nimport {required} from \"../../utils/validators/validators\";\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../../redux/auth-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport style from \"./../common/FormsControls/FormsControls.module.css\"\r\nimport s from \"./Login.module.css\";\r\n\r\nconst LoginForm = ({handleSubmit, error, captchaUrl}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            {createField(\"Email\", \"email\", [required], Input)}\r\n            {createField(\"Password\", \"password\", [required], Input, {type: \"password\"})}\r\n            {createField(null, \"rememberMe\", [], Input, {type: \"checkbox\"}, \"remember me\")}\r\n\r\n            { captchaUrl && <img src={captchaUrl} />}\r\n            { captchaUrl &&  createField(\"Symbols from image\", \"captcha\", [required], Input, {}) }\r\n\r\n\r\n            {error && <div className={style.formSummaryError}>\r\n                {error}\r\n            </div>\r\n            }\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm)\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe, formData.captcha);\r\n    }\r\n\r\n    if (props.isAuth) {\r\n        return <Redirect to={\"/profile\"}/>\r\n    }\r\n\r\n    return <div>\r\n        <h1 className={s.header}>Login</h1>\r\n        <LoginReduxForm onSubmit={onSubmit} captchaUrl={props.captchaUrl}/>\r\n    </div>\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    captchaUrl: state.auth.captchaUrl,\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default connect(mapStateToProps, {login})(Login);","import {getAuthUserData} from \"./auth-reducer\";\r\n\r\nconst INITIALIZED_SUCCESS = 'social-network/app/INITIALIZED_SUCCESS';\r\n\r\n\r\nexport type InitialStateType = {\r\n    initialized: boolean\r\n}\r\n\r\nlet initialState: InitialStateType = {\r\n    initialized: false\r\n};\r\n\r\nconst appReducer = (state = initialState, action: any): InitialStateType => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\ntype InitializedSuccessActionType = {\r\n    type: typeof INITIALIZED_SUCCESS //'INITIALIZED_SUCCESS'\r\n}\r\n\r\nexport const initializedSuccess = (): InitializedSuccessActionType => ({type: INITIALIZED_SUCCESS});\r\n\r\nexport const initializeApp = () => (dispatch: any) => {\r\n    let promise = dispatch(getAuthUserData());\r\n\r\n    Promise.all([promise])\r\n        .then(() => {\r\n            dispatch(initializedSuccess());\r\n        });\r\n}\r\n\r\n\r\nexport default appReducer;\r\n","let initialState = {}\r\ntype InitialStateType = typeof initialState\r\nconst sidebarReducer = (state = initialState, action: any) => {\r\n    return state;\r\n}\r\n\r\nexport default sidebarReducer;\r\n","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport { reducer as formReducer } from 'redux-form'\r\nimport appReducer from \"./app-reducer\";\r\n\r\nlet rootReducer = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n})\r\n\r\ntype RootReducerType = typeof rootReducer; // (globalstate: AppStateType) => AppStateType\r\nexport type AppStateType = ReturnType<RootReducerType>\r\n\r\n// @ts-ignore\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\r\n\r\nconst store = createStore(rootReducer,  composeEnhancers(applyMiddleware(thunkMiddleware)))\r\n// @ts-ignore\r\nwindow.__store__ = store\r\n\r\nexport default store\r\n","import React from \"react\";\r\nimport Preloader from \"../components/common/Preloader/Preloader\";\r\n\r\n\r\nexport const withSuspense = (Component) => {\r\n    return (props) => {\r\n        return <React.Suspense fallback={<div>loading...</div>} >\r\n            <Component {...props} />\r\n        </React.Suspense>\r\n    };\r\n}","import React from 'react';\r\nimport s from \"./error-indicator.module.css\"\r\n\r\nconst ErrorIndicator = () => {\r\n  return <div className={s.error}>OOOPS, its Error</div>;\r\n};\r\n\r\nexport default ErrorIndicator;\r\n","import React, { Component } from 'react';\r\nimport ErrorIndicator from '../error-indicator/error-indicator';\r\n\r\n\r\nexport default class ErrorBoundary extends Component {\r\n\r\n  state = {\r\n    hasError: false\r\n  };\r\n\r\n  componentDidCatch() {\r\n    this.setState({ hasError: true });\r\n  }\r\n\r\n  render() {\r\n    if (this.state.hasError) {\r\n      return <ErrorIndicator/>\r\n    }\r\n\r\n    return this.props.children;\r\n  }\r\n}","import React, {Component} from 'react';\r\nimport './App.css';\r\nimport Navbar from './components/Navbar/Navbar';\r\nimport {BrowserRouter, Redirect, Route, Switch, withRouter} from \"react-router-dom\";\r\n\r\nimport UsersContainer from \"./components/Users/UsersContainer\";\r\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\r\nimport LoginPage from \"./components/Login/Login\";\r\nimport {connect, Provider} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\nimport {initializeApp} from \"./redux/app-reducer\";\r\nimport Preloader from \"./components/common/Preloader/Preloader\";\r\nimport store from \"./redux/redux-store\";\r\nimport {withSuspense} from \"./hoc/withSuspense\";\r\nimport ErrorBoundary from './components/error-boundry/error-boundry';\r\n\r\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\r\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'));\r\n\r\n\r\nclass App extends Component {\r\n    \r\n    componentDidMount() {\r\n        this.props.initializeApp();\r\n    \r\n    }\r\n \r\n    render() {\r\n        if (!this.props.initialized) {\r\n            return <div className= \"load\"><Preloader/></div>\r\n        }\r\n\r\n        return (\r\n            <div className='app-wrapper'>\r\n                <HeaderContainer/>\r\n                <Navbar/>\r\n                <div className='app-wrapper-content'>\r\n                    <Switch>\r\n                        <Route exact path='/'\r\n                               render={() => <Redirect to={\"/profile\"}/>}/>\r\n\r\n                        <Route path='/dialogs'\r\n                               render={withSuspense(DialogsContainer)}/>\r\n\r\n                        <Route path='/profile/:userId?'\r\n                               render={withSuspense(ProfileContainer)}/>\r\n\r\n                        <Route path='/users'\r\n                               render={() => <UsersContainer/>}/>\r\n\r\n                        <Route path='/login'\r\n                               render={() => <LoginPage/>}/>\r\n\r\n                         <Redirect from=\"/\" to=\"/profile\" />\r\n                    </Switch>\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    initialized: state.app.initialized\r\n})\r\n\r\nlet AppContainer = compose(\r\n    withRouter,\r\n    connect(mapStateToProps, {initializeApp}))(App);\r\n\r\nconst SamuraiJSApp = (props) => {\r\n    return <BrowserRouter>\r\n    <ErrorBoundary>\r\n        <Provider store={store}>\r\n            <AppContainer/>\r\n        </Provider>\r\n        </ErrorBoundary>\r\n    </BrowserRouter>\r\n}\r\n\r\nexport default SamuraiJSApp;\r\n","import * as serviceWorker from './serviceWorker';\r\n\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport SamuraiJSApp from \"./App\";\r\n\r\nReactDOM.render(<SamuraiJSApp/>, document.getElementById('root'));\r\n\r\n\r\n// API\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"users_userPhoto__3VNZU\",\"button\":\"users_button__1vIiB\",\"user\":\"users_user__MV8Ci\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__1tHlf\",\"pageNumber\":\"Paginator_pageNumber__veKgb\",\"selectedPage\":\"Paginator_selectedPage__1f6a9\",\"button\":\"Paginator_button__1-o6r\"};","import React from 'react';\r\nimport \"./Preloader.css\"\r\n\r\nlet Preloader = (props) => {\r\n    return (<div className=\"loadingio-spinner-double-ring-t7tyf230e6\"><div className=\"ldio-cugu5hgume\">\r\n    <div></div>\r\n    <div></div>\r\n    <div><div></div></div>\r\n    <div><div></div></div>\r\n    </div></div>)\r\n  \r\n}\r\nexport default Preloader;","export const required = value => {\r\n    if (value) return undefined;\r\n\r\n    return \"Field is required\";\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n    return undefined;\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl___dRWw\",\"error\":\"FormsControls_error__3_KfC\",\"formSummaryError\":\"FormsControls_formSummaryError__1kS8L\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__8Cnf7\",\"loginBlock\":\"Header_loginBlock__1f2H4\",\"logo\":\"Header_logo__3NxzC\"};","import {profileAPI, usersAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\nimport {PhotosType, PostType, ProfileType} from '../types/types';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\n\r\nconst ADD_POST = 'social-network/profile/ADD-POST';\r\nconst SET_USER_PROFILE = 'social-network/profile/SET_USER_PROFILE';\r\nconst SET_STATUS = 'social-network/profile/SET_STATUS';\r\nconst DELETE_POST = 'social-network/profile/DELETE_POST';\r\nconst SAVE_PHOTO_SUCCESS = 'social-network/profile/SAVE_PHOTO_SUCCESS';\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, message: \"what's up man?\", likesCount: 12},\r\n        {id: 2, message: 'so fine, how are you', likesCount: 11},\r\n        {id: 3, message: 'we go to the cinema tonight', likesCount: 11},\r\n        {id: 4, message: \"oooo, it's ok\", likesCount: 11}\r\n    ] as Array<PostType>,\r\n    profile: null as ProfileType | null,\r\n    status: '',\r\n    newPostText: ''\r\n};\r\nexport type InitialStateType = typeof initialState;\r\n\r\nconst profileReducer = (state = initialState, action: any): InitialStateType => {\r\n\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 5,\r\n                message: action.newPostText,\r\n                likesCount: 0\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n                newPostText: ''\r\n            };\r\n        }\r\n        case SET_STATUS: {\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        }\r\n        case SET_USER_PROFILE: {\r\n            return {...state, profile: action.profile}\r\n        }\r\n\r\n        case DELETE_POST:\r\n            return {...state, posts: state.posts.filter(p => p.id != action.postId)}\r\n\r\n        case SAVE_PHOTO_SUCCESS:\r\n            return {...state, profile: {...state.profile, photos: action.photos} as ProfileType}\r\n        \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\ntype AddPostActionCreatorActionType = {\r\n    type: typeof ADD_POST\r\n    newPostText: string\r\n}\r\nexport const addPostActionCreator = (newPostText: string): AddPostActionCreatorActionType => ({type: ADD_POST, newPostText})\r\ntype SetUserProfileActionType = {\r\n    type: typeof SET_USER_PROFILE\r\n    profile: ProfileType\r\n}\r\nexport const setUserProfile = (profile: ProfileType): SetUserProfileActionType => ({type: SET_USER_PROFILE, profile})\r\ntype SetStatusActionType = {\r\n    type: typeof SET_STATUS\r\n    status: string\r\n}\r\nexport const setStatus = (status: string): SetStatusActionType => ({type: SET_STATUS, status})\r\ntype DeletePostActionType = {\r\n    type: typeof DELETE_POST\r\n    postId: number\r\n}\r\nexport const deletePost = (postId: number): DeletePostActionType => ({type: DELETE_POST, postId})\r\ntype SavePhotoSuccessActionType = {\r\n    type: typeof SAVE_PHOTO_SUCCESS\r\n    photos: PhotosType\r\n}\r\nexport const savePhotoSuccess = (photos: PhotosType) => ({type: SAVE_PHOTO_SUCCESS, photos})\r\n\r\nexport const getUserProfile = (userId: number) => async (dispatch: any) => {\r\n    const response = await usersAPI.getProfile(userId);\r\n    dispatch(setUserProfile(response.data));\r\n}\r\n\r\nexport const getStatus = (userId: number) => async (dispatch: any) => {\r\n    let response = await profileAPI.getStatus(userId);\r\n    dispatch(setStatus(response.data));\r\n}\r\n\r\nexport const updateStatus = (status: string) => async (dispatch: any) => {\r\n    try {\r\n        let response = await profileAPI.updateStatus(status);\r\n\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(setStatus(status));\r\n        }\r\n    } catch(error) {\r\n        //\r\n    }\r\n}\r\nexport const savePhoto = (file: any) => async (dispatch: any) => {\r\n    let response = await profileAPI.savePhoto(file);\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(savePhotoSuccess(response.data.data.photos));\r\n    }\r\n}\r\nexport const saveProfile = (profile: ProfileType) => async (dispatch: any, getState: any) => {\r\n    const userId = getState().auth.userId;\r\n    const response = await profileAPI.saveProfile(profile);\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getUserProfile(userId));\r\n    } else {\r\n        dispatch(stopSubmit(\"edit-profile\", {_error: response.data.messages[0] }));\r\n        return Promise.reject(response.data.messages[0]);\r\n    }\r\n}\r\n\r\nexport default profileReducer;\r\n"],"sourceRoot":""}