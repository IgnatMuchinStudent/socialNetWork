{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/ProfileInfo/ProfileStatus.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","redux/profile-selectors.ts","components/Profile/ProfileContainer.jsx"],"names":["module","exports","descriptionBlock","mainPhoto","contact","inform","inputfile","hide","open","status","postsBlock","posts","button","item","ProfileStatus","props","_useState","useState","_useState2","Object","slicedToArray","editMode","setEditMode","_useState3","_useState4","setStatus","useEffect","react_default","a","createElement","className","s","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","ProfileDataFormReduxForm","reduxForm","form","_ref","handleSubmit","error","profile","onSubmit","style","formSummaryError","createField","Input","Textarea","ProfileData","_ref2","isOwner","goToEditMode","onClick","fullName","aboutMe","ProfileInfo","savePhoto","saveProfile","Preloader","src","photos","large","userPhoto","type","target","files","length","for","ProfileInfo_ProfileDataForm","initialValues","formData","then","ProfileInfo_ProfileData","ProfileInfo_ProfileStatus","Post","message","likesCount","maxLength10","maxLengthCreator","AddNewPostFormRedux","Field","name","component","placeholder","validate","required","MyPosts","React","memo","postsElements","toConsumableArray","reverse","map","p","MyPosts_Post_Post","key","id","values","addPost","newPostText","MyPostsContainer","connect","state","profilePage","dispatch","addPostActionCreator","Profile","Profile_ProfileInfo_ProfileInfo","MyPosts_MyPostsContainer","getProfileSelector","getStatusSelector","getisAuth","auth","isAuth","getAuthorizedId","userId","ProfileContainer","this","match","params","authorizedUserId","history","push","getUserProfile","getStatus","refreshProfile","prevProps","prevState","snapshot","components_Profile_Profile","assign","Component","compose","withRouter"],"mappings":"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","file":"static/js/3.d92ce98d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__3n_C2\",\"mainPhoto\":\"ProfileInfo_mainPhoto__2xUUb\",\"contact\":\"ProfileInfo_contact__1irlG\",\"inform\":\"ProfileInfo_inform__2xLr-\",\"inputfile\":\"ProfileInfo_inputfile__9-3Fy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"hide\":\"ProfileStatus_hide__FhPqh\",\"open\":\"ProfileStatus_open__X1FkV\",\"status\":\"ProfileStatus_status__3zFJo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__INItX\",\"posts\":\"MyPosts_posts__3hnhy\",\"button\":\"MyPosts_button__28z8q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__3aCmm\"};","import React, {useState, useEffect} from 'react';\r\nimport s from \"./ProfileStatus.module.css\"\r\nconst ProfileStatus = (props) => {\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect( () => {\r\n        setStatus(props.status);\r\n    }, [props.status] );\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            { !editMode &&\r\n            <div>\r\n                <b className={s.status}>Status: </b> <span onDoubleClick={ activateEditMode } className={s.hide}>{props.status || \"-------\"}</span>\r\n            </div>\r\n            }\r\n            {editMode &&\r\n            <div>\r\n                <input onChange={onStatusChange} className={s.open} autoFocus={true} onBlur={ deactivateEditMode }\r\n                       value={status} />\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default ProfileStatus;","import React from \"react\";\r\nimport s from './ProfileInfo.module.css';\r\nimport {createField, Input, Textarea} from \"../../common/FormsControls/FormsControls\";\r\nimport {reduxForm} from \"redux-form\";\r\nimport style from \"../../common/FormsControls/FormsControls.module.css\";\r\n\r\nconst ProfileDataForm = ({handleSubmit, profile, error}) => {\r\n    return <form onSubmit={handleSubmit}>\r\n        <div><button>save</button></div>\r\n        {error && <div className={style.formSummaryError}>\r\n            {error}\r\n        </div>\r\n        }\r\n        <div>\r\n            <b> name</b>: {createField(\"Full name\", \"fullName\", [], Input)}\r\n        </div>\r\n       \r\n\r\n\r\n        <div>\r\n            <b>About me</b>:\r\n            { createField(\"About me\", \"aboutMe\", [], Textarea  )}\r\n        </div>\r\n    </form>\r\n}\r\n\r\nconst ProfileDataFormReduxForm = reduxForm({form: 'edit-profile'})(ProfileDataForm)\r\n\r\nexport default ProfileDataFormReduxForm;","import React, {useState} from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport ProfileStatus from \"./ProfileStatus\"\r\nimport userPhoto from \"../../../assets/images/user.png\";\r\nimport ProfileDataForm from \"./ProfileDataForm\";\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus, isOwner, savePhoto, saveProfile}) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n\r\n    if (!profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    const onMainPhotoSelected = (e) => {\r\n        if (e.target.files.length) {\r\n            savePhoto(e.target.files[0]);\r\n        }\r\n    }\r\n\r\n    const onSubmit = (formData) => {\r\n        saveProfile(formData).then(\r\n            () => {\r\n                setEditMode(false);\r\n            }\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={s.descriptionBlock}>\r\n                <img src={profile.photos.large || userPhoto} className={s.mainPhoto}/>\r\n                {isOwner && <input className={s.inputfile} type={\"file\"} onChange={onMainPhotoSelected}/>}\r\n               {isOwner && <label for=\"file\">Choose a file</label>}\r\n                { editMode\r\n                    ? <ProfileDataForm initialValues={profile} profile={profile} onSubmit={onSubmit}/>\r\n                    : <ProfileData goToEditMode={() => {setEditMode(true)} } profile={profile} isOwner={isOwner}/> }\r\n\r\n                <ProfileStatus status={status} updateStatus = {updateStatus} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst ProfileData = ({profile, isOwner, goToEditMode}) => {\r\n    return <div className={s.inform}>\r\n        {isOwner && <div><button onClick={goToEditMode}>edit</button></div>}\r\n        <div>\r\n                 <b> name :</b> <h3> {profile.fullName} </h3>\r\n        </div>\r\n        <div>\r\n            <b>About me :</b> <h3>{profile.aboutMe?profile.aboutMe:\"Censored\"} </h3>\r\n        </div>\r\n    </div>\r\n}\r\n\r\n\r\n\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n  return (\r\n    <div className={s.item}>\r\n      <img src='https://www.pavilionweb.com/wp-content/uploads/2017/03/man-300x300.png' />\r\n        { props.message }\r\n          <div>\r\n        <span>like</span> { props.likesCount }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nlet AddNewPostForm = (props) => {\r\n    return <form onSubmit={props.handleSubmit}>\r\n        <div>\r\n            <Field name=\"newPostText\" component={Textarea} placeholder={\"Post message\"}\r\n                   validate={[required, maxLength10]} />\r\n        </div>\r\n        <div>\r\n            <button className={s.button}>Add post</button>\r\n        </div>\r\n    </form>;\r\n}\r\n\r\nlet AddNewPostFormRedux = reduxForm({form: \"ProfileAddNewPostForm\"})(AddNewPostForm);\r\n\r\nconst MyPosts = React.memo(props => {\r\n    let postsElements =\r\n        [...props.posts]\r\n            .reverse()\r\n            .map(p => <Post key={p.id} message={p.message} likesCount={p.likesCount}/>);\r\n\r\n    let onAddPost = (values) => {\r\n        props.addPost(values.newPostText);\r\n    }\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3>My posts</h3>\r\n            <AddNewPostFormRedux onSubmit={onAddPost}/>\r\n            <div className={s.posts}>\r\n              <div>  {postsElements} </div>\r\n            </div>\r\n        </div>\r\n    )\r\n});\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport {addPostActionCreator} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText,\r\n        profile: state.profilePage.profile\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText));\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo savePhoto={props.savePhoto}\r\n                         isOwner={props.isOwner}\r\n                         profile={props.profile}\r\n                         status={props.status}\r\n                         saveProfile={props.saveProfile}\r\n                         updateStatus={props.updateStatus}/>\r\n            <MyPostsContainer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","\r\nimport { AppStateType } from \"./redux-store\";\r\n\r\nexport const getProfileSelector = (state: AppStateType) => {\r\n    return   state.profilePage.profile;\r\n}\r\n\r\nexport const getStatusSelector = (state: AppStateType) => {\r\n    return state.profilePage.status;\r\n}\r\n\r\nexport const getisAuth = (state: AppStateType) => {\r\n    return  state.auth.isAuth;\r\n}\r\nexport const getAuthorizedId = (state: AppStateType) => {\r\n    return state.auth.userId;\r\n}\r\n","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, getUserProfile, savePhoto, saveProfile, updateStatus} from \"../../redux/profile-reducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\nimport { getProfileSelector, getStatusSelector, getAuthorizedId, getisAuth } from '../../redux/profile-selectors';\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    refreshProfile() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId) {\r\n                this.props.history.push(\"/login\");\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.match.params.userId != prevProps.match.params.userId ) {\r\n            this.refreshProfile();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props}\r\n                    isOwner={!this.props.match.params.userId}\r\n                     profile={this.props.profile}\r\n                     status={this.props.status}\r\n                     updateStatus={this.props.updateStatus}\r\n                     savePhoto={this.props.savePhoto}/>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    //console.log('mapStateToProps PROFILE')\r\n    return ({\r\n        profile: getProfileSelector(state),\r\n        status: getStatusSelector(state),\r\n        authorizedUserId: getAuthorizedId(state),\r\n        isAuth: getisAuth(state)\r\n    })\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus, savePhoto, saveProfile}),\r\n    withRouter\r\n)(ProfileContainer);\r\n\r\n\r\n\r\n\r\n"],"sourceRoot":""}