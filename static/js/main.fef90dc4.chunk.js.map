{"version":3,"sources":["api/api.ts","assets/images/user.png","redux/dialogs-reducer.ts","components/Login/Login.module.css","components/error-indicator/error-indicator.module.css","components/Navbar/Navbar.module.css","components/common/FormsControls/FormsControls.tsx","serviceWorker.js","components/Navbar/Navbar.jsx","utils/object-helpers.js","redux/users-reducer.ts","components/common/Paginator/Paginator.tsx","components/Users/User.tsx","components/Users/Users.tsx","redux/users-selectors.ts","components/Users/UsersContainer.tsx","components/Header/Header.jsx","redux/auth-reducer.ts","components/Header/HeaderContainer.jsx","components/Login/Login.tsx","redux/app-reducer.ts","redux/sidebar-reducer.ts","redux/redux-store.ts","hoc/withSuspense.js","components/error-indicator/error-indicator.js","components/error-boundry/error-boundry.js","App.js","index.js","components/Users/users.module.css","components/common/Paginator/Paginator.module.css","components/common/Preloader/Preloader.js","components/common/FormsControls/FormsControls.module.css","utils/validators/validators.js","components/Header/Header.module.css","redux/profile-reducer.ts"],"names":["__webpack_require__","d","__webpack_exports__","usersAPI","profileAPI","ResultCodesEnum","ResultCodeForCapctha","authAPI","securityAPI","axios__WEBPACK_IMPORTED_MODULE_0__","instance","n","axios","create","withCredentials","baseURL","headers","API-KEY","getUsers","currentPage","arguments","length","undefined","pageSize","get","concat","then","response","data","follow","userId","post","unfollow","delete","getProfile","console","warn","getStatus","updateStatus","status","put","savePhoto","photoFile","formData","FormData","append","Content-Type","saveProfile","profile","me","res","login","email","password","rememberMe","captcha","logout","getCaptchaUrl","module","exports","p","initialState","dialogs","id","name","messages","message","sendMessageCreator","newMessageBody","type","dialogsReducer","state","action","body","Object","C_Users_Desktop_sss_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_1__","C_Users_Desktop_sss_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","header","error","nav","item","activeLink","FormControl","_ref","_ref$meta","meta","touched","children","hasError","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","className","styles","formControl","Textarea","props","input","restProps","C_Users_Desktop_sss_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","assign","Input","createField","placeholder","validators","component","text","redux_form__WEBPACK_IMPORTED_MODULE_3__","validate","Boolean","window","location","hostname","match","Navbar","react_default","s","NavLink","to","activeClassName","active","updateObjectInArray","items","itemId","objPropName","newObjProps","map","u","objectSpread2","FOLLOW","UNFOLLOW","SET_USERS","users","totalUsersCount","isFetching","followingInProgress","actions","count","_followUnfollowFlow","_ref2","asyncToGenerator","regenerator_default","mark","_callee2","dispatch","apiMethod","actionCreator","wrap","_context2","prev","next","sent","resultCode","stop","_x2","_x3","_x4","_x5","apply","this","usersReducer","followed","toConsumableArray","filter","Paginator","totalItemsCount","onPageChanged","_ref$portionSize","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","_useState","useState","_useState2","slicedToArray","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","cn","paginator","button","onClick","defineProperty","selectedPage","pageNumber","key","e","User","user","src","photos","small","userPhoto","disabled","some","Users","objectWithoutProperties","common_Paginator_Paginator","Users_User","createSelector","usersPage","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","_this","_this$props","Fragment","pageTitle","Preloader","components_Users_Users","React","Component","compose","connect","_ref3","_callee3","_context3","bind","_x6","_ref4","_callee4","_context4","_x7","page","_callee","_context","totalCount","_x","Header","loginBlock","isAuth","logo","captchaUrl","setAuthUserData","payload","getCaptchaUrlSuccess","getAuthUserData","meData","_meData$data","_login","Success","url","authReducer","HeaderContainer","components_Header_Header","auth","LoginReduxForm","reduxForm","form","handleSubmit","onSubmit","required","style","formSummaryError","CaptchaIsRequired","stopSubmit","_error","Redirect","initialized","appReducer","sidebarReducer","rootReducer","combineReducers","profilePage","profileReducer","dialogsPage","sidebar","formReducer","app","store","createStore","applyMiddleware","thunkMiddleware","withSuspense","Suspense","fallback","ErrorIndicator","ErrorBoundary","setState","error_indicator","DialogsContainer","lazy","ProfileContainer","App","initializeApp","Header_HeaderContainer","components_Navbar_Navbar","Switch","Route","exact","path","render","Users_UsersContainer","components_Login_Login","from","AppContainer","withRouter","promise","Promise","all","SamuraiJSApp","HashRouter","error_boundry_ErrorBoundary","es","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","maxLengthCreator","value","maxLength","ADD_POST","SET_STATUS","DELETE_POST","posts","likesCount","newPostText","addPostActionCreator","setStatus","getUserProfile","C_Users_Desktop_sss_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","C_Users_Desktop_sss_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","t0","file","_ref5","_callee5","getState","_context5","abrupt","reject","newPost","C_Users_Desktop_sss_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_3__","C_Users_Desktop_sss_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_2__","postId"],"mappings":"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","file":"static/js/main.fef90dc4.chunk.js","sourcesContent":["import axios, {AxiosResponse} from \"axios\";\r\nimport {ProfileType} from '../types/types';\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers:     {\r\n        \"API-KEY\": \"805fc6206fbaeec-1e18-453e-af84-9-bd4f-400b-b9bd-106cc3d4ec2a\"\r\n    }\r\n});\r\n\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage = 1, pageSize = 10) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => {\r\n                return response.data;\r\n            });\r\n    },\r\n    follow(userId: number) {\r\n        return instance.post(`follow/${userId}`)\r\n    },\r\n    unfollow(userId: number) {\r\n        return instance.delete(`follow/${userId}`)\r\n    },\r\n    getProfile(userId: number) {\r\n        console.warn('Obsolete method. Please profileAPI object.')\r\n        return profileAPI.getProfile(userId);\r\n    }\r\n}\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId: number) {\r\n        return instance.get(`profile/` + userId);\r\n    },\r\n    getStatus(userId: number) {\r\n        return instance.get(`profile/status/` + userId);\r\n    },\r\n    updateStatus(status: string) {\r\n        return instance.put(`profile/status`, { status: status });\r\n    },\r\n    savePhoto(photoFile: any) {\r\n        const formData = new FormData();\r\n        formData.append(\"image\", photoFile);\r\n\r\n        return instance.put(`profile/photo`, formData, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        });\r\n    },\r\n    saveProfile(profile: ProfileType) {\r\n        return instance.put(`profile`, profile );\r\n    }\r\n}\r\n\r\nexport enum ResultCodesEnum {\r\n    Success = 0,\r\n    Error = 1\r\n}\r\n\r\nexport enum ResultCodeForCapctha {\r\n    CaptchaIsRequired = 10\r\n}\r\n\r\n\r\ntype MeResponseType = {\r\n    data: {\r\n        id: number\r\n        email: string\r\n        login: string\r\n    }\r\n    resultCode: ResultCodesEnum\r\n    messages: Array<string>\r\n}\r\n\r\ntype LoginResponseType = {\r\n    data: {\r\n        userId: number\r\n    }\r\n    resultCode: ResultCodesEnum | ResultCodeForCapctha\r\n    messages: Array<string>\r\n}\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get<MeResponseType>(`auth/me`).then(res => res.data);\r\n    },\r\n    login(email: string, password: string, rememberMe = false, captcha: null | string = null ) {\r\n        return instance.post<LoginResponseType>(`auth/login`, { email, password, rememberMe, captcha })\r\n            .then(res => res.data);\r\n    },\r\n    logout() {\r\n        return instance.delete(`auth/login`);\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const securityAPI = {\r\n    getCaptchaUrl() {\r\n        return instance.get(`security/get-captcha-url`);\r\n    }\r\n}\r\n\r\n\r\n","module.exports = __webpack_public_path__ + \"static/media/user.d48a8973.png\";","const SEND_MESSAGE = 'social-network/dialogs/SEND_MESSAGE'\r\n\r\ntype DialogType = {\r\n    id: number\r\n    name: string\r\n}\r\ntype MessageType = {\r\n    id: number\r\n    message: string\r\n}\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        {id: 1, name: 'Dimych'},\r\n        {id: 2, name: 'Andrew'},\r\n        {id: 3, name: 'Sveta'},\r\n        {id: 4, name: 'Sasha'},\r\n        {id: 5, name: 'Viktor'},\r\n        {id: 6, name: 'Valera'}\r\n    ] as Array<DialogType>,\r\n    messages: [\r\n        {id: 1, message: 'Hi'},\r\n        {id: 2, message: 'How is your it-kamasutra?'},\r\n        {id: 3, message: 'Yo'},\r\n        {id: 4, message: 'Yo'},\r\n        {id: 5, message: 'Yo'}\r\n    ] as Array<MessageType>\r\n}\r\n\r\nexport type InitialStateType = typeof initialState\r\n\r\nconst dialogsReducer = (state = initialState, action: any): InitialStateType => {\r\n    switch (action.type) {\r\n        case SEND_MESSAGE:\r\n            let body = action.newMessageBody;\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, {id: 6, message: body}]\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\ntype SendMessageCreatorActionType = {\r\n    type: typeof SEND_MESSAGE\r\n    newMessageBody: string\r\n}\r\n\r\nexport const sendMessageCreator = (newMessageBody: string): SendMessageCreatorActionType => ({type: SEND_MESSAGE, newMessageBody})\r\n\r\n\r\nexport default dialogsReducer;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Login_header__2XUI8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"error-indicator_error__27j4X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__3Gmzw\",\"item\":\"Navbar_item__1AHSL\",\"activeLink\":\"Navbar_activeLink__3Sn_M\"};","import React from \"react\"\r\nimport styles from \"./FormsControls.module.css\"\r\nimport {ValidatorsType} from \"../../../utils/validators/validators\"\r\nimport {Field, WrappedFieldProps} from \"redux-form\"\r\nimport {WrappedFieldMetaProps} from 'redux-form/lib/Field'\r\n\r\ntype FormControlPropsType = {\r\n    meta: WrappedFieldMetaProps\r\n}\r\n\r\nconst FormControl: React.FC<FormControlPropsType> = ({meta: {touched, error}, children}) => {\r\n    const hasError = touched && error;\r\n    return (\r\n        <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\r\n            <div>\r\n                {children}\r\n            </div>\r\n            {hasError && <span>{error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport const Textarea: React.FC<WrappedFieldProps> = (props) => {\r\n    //const {input, meta, child, ...restProps} = props;\r\n    const {input, meta, ...restProps} = props;\r\n    return <FormControl {...props}><textarea {...input} {...restProps} /></FormControl>\r\n}\r\n\r\nexport const Input: React.FC<WrappedFieldProps> = (props) => {\r\n    //const {input, meta, child, ...restProps} = props;\r\n    const {input, meta, ...restProps} = props;\r\n    return <FormControl {...props}><input {...input} {...restProps} /></FormControl>\r\n}\r\n\r\nexport function createField<FormKeysType extends string>(\r\n                            placeholder: string | undefined,\r\n                            name: FormKeysType,\r\n                            validators: Array<ValidatorsType>,\r\n                            component: React.FC<WrappedFieldProps>,\r\n                            props = {}, text = \"\") {\r\n    return <div>\r\n        <Field placeholder={placeholder} name={name}\r\n               validate={validators}\r\n               component={component}\r\n               {...props}\r\n        /> {text}\r\n    </div>\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport s from './Navbar.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className={s.nav}>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/profile\" activeClassName={s.activeLink}>Profile</NavLink>\r\n            </div>\r\n            <div className={`${s.item} ${s.active}`}>\r\n                <NavLink to=\"/dialogs\" activeClassName={s.activeLink}>Messages</NavLink>\r\n            </div>\r\n            <div className={`${s.item} ${s.active}`}>\r\n                <NavLink to=\"/users\" activeClassName={s.activeLink}>Users</NavLink>\r\n            </div>\r\n\r\n            <div className={s.item}>\r\n                <a>News</a>\r\n            </div>\r\n            <div className={s.item}>\r\n                <a>Music</a>\r\n            </div>\r\n            <div className={s.item}>\r\n                <a>Settings</a>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar;","\r\nexport const updateObjectInArray = (items, itemId, objPropName, newObjProps) => {\r\n    return items.map(u => {\r\n        if (u[objPropName] === itemId) {\r\n            return {...u, ...newObjProps}\r\n        }\r\n        return u;\r\n    })\r\n}\r\n","import {usersAPI} from \"../api/api\";\r\nimport {updateObjectInArray} from \"../utils/object-helpers\";\r\nimport {PhotosType, UserType} from '../types/types';\r\nimport { AppStateType, inferActionsType } from './redux-store';\r\nimport {Dispatch} from 'redux';\r\nimport {ThunkAction} from 'redux-thunk';\r\n\r\nconst FOLLOW = 'social-network/users/FOLLOW';\r\nconst UNFOLLOW = 'social-network/users/UNFOLLOW';\r\nconst SET_USERS = 'social-network/users/SET_USERS';\r\nconst SET_CURRENT_PAGE = 'social-network/users/SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'social-network/users/SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'social-network/users/TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'social-network/users/TOGGLE_IS_FOLLOWING_PROGRESS';\r\n\r\n\r\nlet initialState = {\r\n    users: [] as Array<UserType>,\r\n    pageSize: 10,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: [] as Array<number>, //array of users ids\r\n};\r\n\r\ntype InitialState = typeof initialState;\r\n\r\nconst usersReducer = (state = initialState, action: ActionsType): InitialState => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: true})\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: false})\r\n            }\r\n        case SET_USERS: {\r\n            return {...state, users: action.users}\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return {...state, currentPage: action.currentPage}\r\n        }\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return {...state, totalUsersCount: action.count}\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return {...state, isFetching: action.isFetching}\r\n        }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id != action.userId)\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport const actions ={\r\n     followSuccess : (userId: number) => ({type: FOLLOW, userId} as const),\r\n     unfollowSuccess : (userId: number) => ({type: UNFOLLOW, userId} as const),\r\n     setUsers : (users: Array<UserType>)=> ({type: SET_USERS, users} as const),\r\n     setCurrentPage : (currentPage: number) => ({type: SET_CURRENT_PAGE, currentPage} as const),\r\n\r\n setTotalUsersCount :(totalUsersCount: number) => ({\r\n    type: SET_TOTAL_USERS_COUNT,\r\n    count: totalUsersCount\r\n}  as const),\r\n\r\n toggleIsFetching : (isFetching: boolean) => ({\r\n    type: TOGGLE_IS_FETCHING,\r\n    isFetching\r\n} as const),\r\n\r\n\r\n\r\n toggleFollowingProgress : (isFetching: boolean, userId: number) => ({\r\n    type: TOGGLE_IS_FOLLOWING_PROGRESS,\r\n    isFetching,\r\n    userId\r\n} as const)\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\ntype ActionsType =  inferActionsType<typeof actions>\r\n\r\ntype GetStateType = () => AppStateType\r\ntype DispatchType = Dispatch<ActionsType>\r\ntype ThunkType = ThunkAction<Promise<void>, AppStateType, unknown, ActionsType>\r\n\r\nexport const requestUsers = (page: number,\r\n                             pageSize: number): ThunkType => {\r\n    return async (dispatch) => {\r\n        dispatch(actions.setCurrentPage(page));\r\n\r\n        let data = await usersAPI.getUsers(page, pageSize);\r\n        dispatch(actions.toggleIsFetching(false));\r\n        dispatch(actions.setUsers(data.items));\r\n        dispatch(actions.setTotalUsersCount(data.totalCount));\r\n    }\r\n}\r\n\r\nconst _followUnfollowFlow = async (dispatch: DispatchType,\r\n                                   userId: number,\r\n                                   apiMethod: any, actionCreator: (userId: number) => ActionsType) => {\r\n    dispatch(actions.toggleFollowingProgress(true, userId));\r\n    let response = await apiMethod(userId);\r\n\r\n    if (response.data.resultCode == 0) {\r\n        dispatch(actionCreator(userId));\r\n    }\r\n    dispatch(actions.toggleFollowingProgress(false, userId));\r\n}\r\n\r\nexport const follow = (userId: number): ThunkType => {\r\n    return async (dispatch) => {\r\n        _followUnfollowFlow(dispatch, userId, usersAPI.follow.bind(usersAPI), actions.followSuccess);\r\n    }\r\n}\r\n\r\nexport const unfollow = (userId: number): ThunkType => {\r\n    return async (dispatch) => {\r\n        _followUnfollowFlow(dispatch, userId, usersAPI.unfollow.bind(usersAPI), actions.unfollowSuccess);\r\n    }\r\n}\r\n\r\nexport default usersReducer;\r\n","import React, {useState} from 'react'\r\nimport styles from './Paginator.module.css'\r\nimport cn from 'classnames'\r\n\r\ntype PropsType = {\r\n    totalItemsCount: number\r\n    pageSize: number\r\n    currentPage: number\r\n    onPageChanged: (pageNumber: number) => void\r\n    portionSize?: number\r\n}\r\n\r\nlet Paginator: React.FC<PropsType> = ({totalItemsCount, pageSize,\r\n                                      currentPage,\r\n                                      onPageChanged,\r\n                                      portionSize = 10}) => {\r\n\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n\r\n    let pages: Array<number> = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionSize);\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n    let rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n\r\n    return <div className={cn(styles.paginator)}>\r\n        { portionNumber > 1 &&\r\n        <button className={styles.button} onClick={() => { setPortionNumber(portionNumber - 1) }}>PREV</button> }\r\n\r\n            {pages\r\n                .filter(p => p >= leftPortionPageNumber && p<=rightPortionPageNumber)\r\n                .map((p) => {\r\n                return <span className={ cn({\r\n                    [styles.selectedPage]: currentPage === p\r\n                }, styles.pageNumber) }\r\n                             key={p}\r\n                             onClick={(e) => {\r\n                                 onPageChanged(p);\r\n                             }}>{p}</span>\r\n            })}\r\n        { portionCount > portionNumber &&\r\n            <button className={styles.button} onClick={() => { setPortionNumber(portionNumber + 1) }}>NEXT</button> }\r\n\r\n\r\n    </div>\r\n}\r\n\r\nexport default Paginator;\r\n","import React from 'react';\r\nimport s from \"./users.module.css\";\r\nimport userPhoto from \"../../assets/images/user.png\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport { UserType } from '../../types/types';\r\ntype PropsType = {\r\n    user:UserType,\r\n    followingInProgress:Array<number>,\r\n    unfollow:(userId: number)=>void,\r\n    follow: (userId: number)=>void\r\n\r\n}\r\n\r\n\r\nlet User:React.FC<PropsType> = ({user, followingInProgress, unfollow, follow}) => {\r\n    return (\r\n       <div>\r\n                <span>\r\n                    <div>\r\n                       <NavLink to={'/profile/' + user.id}>\r\n                        <img src={user.photos.small != null ? user.photos.small : userPhoto}\r\n                             className={s.userPhoto} />\r\n                       </NavLink>\r\n                    </div>\r\n                    <div>\r\n                        {user.followed\r\n                            ? <button className={s.button} disabled={followingInProgress\r\n                                .some(id => id === user.id)}\r\n                                      onClick={() => { unfollow(user.id) }}>\r\n                                Unfollow</button>\r\n                            : <button className={s.button} disabled={followingInProgress.some(id => id === user.id)}\r\n                                      onClick={() => { follow(user.id) }}>\r\n                                      Follow</button>}\r\n\r\n                    </div>\r\n                </span>\r\n                <span>\r\n                    <span>\r\n                        <h4>  {user.name}</h4>\r\n                        <h4> {user.status? user.status:\"no status\"}</h4>\r\n                    </span>\r\n                    <span>\r\n                    </span>\r\n                </span>\r\n            </div>)\r\n}\r\n\r\nexport default User;","import React, {FC} from 'react';\r\nimport Paginator from \"../common/Paginator/Paginator\";\r\nimport User from \"./User\";\r\nimport {UserType} from '../../types/types';\r\nimport s from \"./users.module.css\";\r\n\r\ntype PropsType = {\r\n    totalUsersCount: number\r\n    pageSize: number\r\n    currentPage: number\r\n    onPageChanged: (pageNumber: number) => void\r\n    users: Array<UserType>\r\n    followingInProgress: Array<number>\r\n    unfollow: (userId: number) => void \r\n    follow: (userId: number) => void\r\n}\r\n\r\n\r\nlet Users: FC<PropsType> = ({currentPage, totalUsersCount, pageSize, onPageChanged, users,\r\n                                ...props}) => {\r\n    return <div>\r\n        <Paginator currentPage={currentPage} onPageChanged={onPageChanged}\r\n                   totalItemsCount={totalUsersCount} pageSize={pageSize}/>\r\n        <div className={s.user}>\r\n            {\r\n                users.map(u => <User user={u}\r\n                                     followingInProgress={props.followingInProgress}\r\n                                     key={u.id}\r\n                                     unfollow={props.unfollow}\r\n                                     follow={props.follow}\r\n                    />\r\n                )\r\n            }\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default Users;\r\n","import {createSelector} from \"reselect\";\r\nimport { AppStateType } from \"./redux-store\";\r\n\r\nconst getUsersSelector = (state: AppStateType) => {\r\n    return state.usersPage.users;\r\n}\r\n\r\nexport const getUsers = createSelector(getUsersSelector,\r\n    (users) => {\r\n    return users.filter(u => true);\r\n})\r\n\r\nexport const getPageSize = (state: AppStateType) => {\r\n    return state.usersPage.pageSize;\r\n}\r\n\r\nexport const getTotalUsersCount = (state: AppStateType) => {\r\n    return state.usersPage.totalUsersCount;\r\n}\r\n\r\nexport const getCurrentPage = (state: AppStateType) => {\r\n    return state.usersPage.currentPage;\r\n}\r\n\r\nexport const getIsFetching = (state: AppStateType) => {\r\n    return state.usersPage.isFetching;\r\n}\r\nexport const getFollowingInProgress = (state: AppStateType) => {\r\n    return state.usersPage.followingInProgress;\r\n}\r\n\r\nexport const countSomethingDifficult = (state: AppStateType) => {\r\n    debugger\r\n    //for... math... big arrays\r\n    let count = 23;\r\n    return count;\r\n}\r\n","import React from 'react';\r\nimport {connect, DefaultRootState} from 'react-redux';\r\nimport {\r\n    follow,\r\n    unfollow, requestUsers, actions\r\n} from '../../redux/users-reducer';\r\nimport Users from './Users';\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    getCurrentPage,\r\n    getFollowingInProgress,\r\n    getIsFetching,\r\n    getPageSize,\r\n    getTotalUsersCount, getUsers\r\n} from \"../../redux/users-selectors\";\r\nimport { UserType } from '../../types/types';\r\nimport { AppStateType } from '../../redux/redux-store';\r\n\r\ntype MapStatePropsType = {\r\n    currentPage: number\r\n    pageSize: number\r\n    isFetching: boolean\r\n    totalUsersCount: number\r\n    users: Array<UserType>\r\n    followingInProgress: Array<number>\r\n}\r\n\r\ntype MapDispatchPropsType = {\r\n    getUsers: (currentPage: number, pageSize: number) => void\r\n    unfollow: (userId: number) => void\r\n    follow: (userId: number) => void\r\n}\r\n\r\ntype OwnPropsType = {\r\n    pageTitle: string\r\n}\r\n\r\ntype PropsType = MapStatePropsType & MapDispatchPropsType & OwnPropsType\r\n\r\nclass UsersContainer extends React.Component<PropsType> {\r\n    componentDidMount() {\r\n        const {currentPage, pageSize} = this.props;\r\n        this.props.getUsers(currentPage, pageSize);\r\n    }\r\n\r\n    onPageChanged = (pageNumber: number) => {\r\n        const {pageSize} = this.props;\r\n        this.props.getUsers(pageNumber, pageSize);\r\n    }\r\n\r\n    render() {\r\n\r\n        return <>\r\n            <h2>{this.props.pageTitle}</h2>\r\n            {this.props.isFetching ? <Preloader/> : null}\r\n            <Users totalUsersCount={this.props.totalUsersCount}\r\n                   pageSize={this.props.pageSize}\r\n                   currentPage={this.props.currentPage}\r\n                   onPageChanged={this.onPageChanged}\r\n                   users={this.props.users}\r\n                   follow={this.props.follow}\r\n                   unfollow={this.props.unfollow}\r\n                   followingInProgress={this.props.followingInProgress}\r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state: AppStateType): MapStatePropsType => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state)\r\n    }\r\n}\r\n\r\n\r\nexport default compose(\r\n    // TStateProps = {}, TDispatchProps = {}, TOwnProps = {}, State = DefaultRootState\r\n    connect<MapStatePropsType, MapDispatchPropsType, OwnPropsType, AppStateType>(\r\n        mapStateToProps,\r\n        {follow, unfollow, getUsers: requestUsers})\r\n)(UsersContainer)\r\n","import React from 'react';\r\nimport s from './Header.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Header = (props) => {\r\n    return <header className={s.header}>\r\n        <div className={s.loginBlock}>\r\n            { props.isAuth\r\n                ? <div className={s.logo}><h2>Welcome {props.login}</h2><button  onClick={props.logout}>Log out</button> </div>\r\n                : <NavLink to={'/login'} ><h2>Login</h2> </NavLink> }\r\n        </div>\r\n    </header>\r\n}\r\n\r\nexport default Header;","import {authAPI, ResultCodeForCapctha, ResultCodesEnum, securityAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_USER_DATA = 'social-network/auth/SET_USER_DATA';\r\nconst GET_CAPTCHA_URL_SUCCESS = 'social-network/auth/GET_CAPTCHA_URL_SUCCESS';\r\n\r\nlet initialState = {\r\n    userId: null as (number | null),\r\n    email: null as string | null,\r\n    login: null as string | null,\r\n    isAuth: false,\r\n    captchaUrl: null as string | null// if null, then captcha is not required\r\n};\r\n\r\nexport type InitialStateType = typeof initialState;\r\n\r\nconst authReducer = (state = initialState, action: any): InitialStateType => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n        case GET_CAPTCHA_URL_SUCCESS:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\ntype SetAuthUserDataActionPayloadType = {\r\n    userId: number | null,\r\n    email: string | null,\r\n    login: string | null,\r\n    isAuth: boolean\r\n}\r\ntype SetAuthUserDataActionType = {\r\n    type: typeof SET_USER_DATA,\r\n    payload: SetAuthUserDataActionPayloadType\r\n}\r\n\r\nexport const setAuthUserData = (userId: number | null, email: string | null, login: string | null, isAuth: boolean): SetAuthUserDataActionType => ({\r\n    type: SET_USER_DATA, payload:\r\n        {userId, email, login, isAuth}\r\n});\r\n\r\ntype GetCaptchaUrlSuccessActionType = {\r\n    type: typeof GET_CAPTCHA_URL_SUCCESS\r\n    payload: { captchaUrl: string }\r\n}\r\n\r\nexport const getCaptchaUrlSuccess = (captchaUrl: string): GetCaptchaUrlSuccessActionType => ({\r\n    type: GET_CAPTCHA_URL_SUCCESS, payload: {captchaUrl}\r\n});\r\n\r\nexport const getAuthUserData = () => async (dispatch: any) => {\r\n    let meData = await authAPI.me();\r\n\r\n    if (meData.resultCode === ResultCodesEnum.Success) {\r\n        let {id, login, email} = meData.data;\r\n        dispatch(setAuthUserData(id, email, login, true));\r\n    }\r\n}\r\n\r\nexport const login = (email: string, password: string, rememberMe: boolean, captcha: string) => async (dispatch: any) => {\r\n    let data = await authAPI.login(email, password, rememberMe, captcha);\r\n    if (data.resultCode === ResultCodesEnum.Success) {\r\n        // success, get auth data\r\n        dispatch(getAuthUserData())\r\n    } else {\r\n        if (data.resultCode === ResultCodeForCapctha.CaptchaIsRequired) {\r\n            dispatch(getCaptchaUrl());\r\n        }\r\n\r\n        let message = data.messages.length > 0 ? data.messages[0] : \"Some error\";\r\n        dispatch(stopSubmit(\"login\", {_error: message}));\r\n    }\r\n}\r\n\r\nexport const getCaptchaUrl = () => async (dispatch: any) => {\r\n    const response = await securityAPI.getCaptchaUrl();\r\n    const captchaUrl = response.data.url;\r\n    dispatch(getCaptchaUrlSuccess(captchaUrl));\r\n}\r\n\r\n\r\n\r\nexport const logout = () => async (dispatch: any) => {\r\n    let response = await authAPI.logout();\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setAuthUserData(null, null, null, false));\r\n    }\r\n}\r\n\r\nexport default authReducer;\r\n","import React from 'react';\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {logout} from \"../../redux/auth-reducer\";\r\n\r\nclass HeaderContainer extends React.Component {\r\n\r\n\r\n    render() {\r\n        return <Header {...this.props} />\r\n    }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login,\r\n});\r\n\r\nexport default connect(mapStateToProps, {logout})(HeaderContainer);","import React from 'react';\r\nimport {Field, reduxForm, InjectedFormProps} from \"redux-form\";\r\nimport {createField, Input} from \"../common/FormsControls/FormsControls\";\r\nimport {required} from \"../../utils/validators/validators\";\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../../redux/auth-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport style from \"./../common/FormsControls/FormsControls.module.css\"\r\nimport s from \"./Login.module.css\";\r\nimport { AppStateType } from '../../redux/redux-store';\r\ntype IProps = {\r\n    captchaUrl:string  | null\r\n}\r\nconst LoginForm:React.FC<InjectedFormProps<LoginFormValues, IProps>&IProps> = ({handleSubmit, error, captchaUrl}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            {createField<LoginFormValuesTypeKeys>(\"Email\", \"email\", [required], Input)}\r\n            {createField<LoginFormValuesTypeKeys>(\"Password\", \"password\", [required], Input, {type: \"password\"})}\r\n            {createField<LoginFormValuesTypeKeys>(undefined, \"rememberMe\", [], Input, {type: \"checkbox\"}, \"remember me\")}\r\n\r\n            { captchaUrl && <img src={captchaUrl} />}\r\n            { captchaUrl &&  createField(\"Symbols from image\", \"captcha\", [required], Input, {}) }\r\n\r\n\r\n            {error && <div className={style.formSummaryError}>\r\n                {error}\r\n            </div>\r\n            }\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm<LoginFormValues, IProps>({form: 'login'})(LoginForm)\r\ntype MapStateToProps={\r\n    captchaUrl:string | null,\r\n    isAuth: boolean\r\n}\r\ntype MapDispatchToProps = {\r\n    login:(email:string, password:string, rememberMe:boolean, captcha:string)=>void\r\n}\r\ntype LoginFormValues = {\r\n    email:string, password:string, rememberMe:boolean, captcha:string\r\n}\r\nexport type LoginFormValuesTypeKeys = Extract< keyof LoginFormValues,string>\r\n\r\nconst Login:React.FC<MapStateToProps & MapDispatchToProps > = (props) => {\r\n    const onSubmit = (formData:LoginFormValues) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe, formData.captcha);\r\n    }\r\n\r\n    if (props.isAuth) {\r\n        return <Redirect to={\"/profile\"}/>\r\n    }\r\n\r\n    return <div>\r\n        <h1 className={s.header}>Login</h1>\r\n        <LoginReduxForm onSubmit={onSubmit} captchaUrl={props.captchaUrl}/>\r\n    </div>\r\n}\r\nconst mapStateToProps = (state:AppStateType):MapStateToProps => ({\r\n    captchaUrl: state.auth.captchaUrl,\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default connect(mapStateToProps, {login})(Login);","import {getAuthUserData} from \"./auth-reducer\";\r\n\r\nconst INITIALIZED_SUCCESS = 'social-network/app/INITIALIZED_SUCCESS';\r\n\r\n\r\ntype InitialStateType = typeof initialState;\r\n\r\n\r\nlet initialState= {\r\n    initialized: false\r\n};\r\n\r\nconst appReducer = (state = initialState, action: any): InitialStateType => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\ntype InitializedSuccessActionType = {\r\n    type: typeof INITIALIZED_SUCCESS //'INITIALIZED_SUCCESS'\r\n}\r\n\r\nexport const initializedSuccess = (): InitializedSuccessActionType => ({type: INITIALIZED_SUCCESS});\r\n\r\nexport const initializeApp = () => (dispatch: any) => {\r\n    let promise = dispatch(getAuthUserData());\r\n\r\n    Promise.all([promise])\r\n        .then(() => {\r\n            dispatch(initializedSuccess());\r\n        });\r\n}\r\n\r\n\r\nexport default appReducer;\r\n","let initialState = {}\r\ntype InitialStateType = typeof initialState\r\nconst sidebarReducer = (state = initialState, action: any) => {\r\n    return state;\r\n}\r\n\r\nexport default sidebarReducer;\r\n","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport { reducer as formReducer } from 'redux-form'\r\nimport appReducer from \"./app-reducer\";\r\n\r\nlet rootReducer = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n})\r\n\r\ntype RootReducerType = typeof rootReducer; \r\nexport type AppStateType = ReturnType<RootReducerType>\r\nexport type PropertieType<T> = T extends{[key:string]: infer U}?  U: never\r\nexport type inferActionsType<T extends {[key:string]: (...args:any[])=>any}> = ReturnType<PropertieType<T> >\r\n\r\n\r\nconst store = createStore(rootReducer, (applyMiddleware(thunkMiddleware)))\r\n\r\n\r\nexport default store\r\n","import React from \"react\";\r\nimport Preloader from \"../components/common/Preloader/Preloader\";\r\n\r\n\r\nexport const withSuspense = (Component) => {\r\n    return (props) => {\r\n        return <React.Suspense fallback={<div>loading...</div>} >\r\n            <Component {...props} />\r\n        </React.Suspense>\r\n    };\r\n}","import React from 'react';\r\nimport s from \"./error-indicator.module.css\"\r\n\r\nconst ErrorIndicator = () => {\r\n  return <div className={s.error}>OOOPS, its Error</div>;\r\n}; \r\n\r\nexport default ErrorIndicator;\r\n","import React, { Component } from 'react';\r\nimport ErrorIndicator from '../error-indicator/error-indicator';\r\n\r\n\r\nexport default class ErrorBoundary extends Component {\r\n\r\n  state = {\r\n    hasError: false\r\n  };\r\n\r\n  componentDidCatch() {\r\n    this.setState({ hasError: true });\r\n  }\r\n\r\n  render() {\r\n    if (this.state.hasError) {\r\n      return <ErrorIndicator/>\r\n    }\r\n\r\n    return this.props.children;\r\n  }\r\n}","import React, {Component} from 'react';\r\nimport './App.css';\r\nimport Navbar from './components/Navbar/Navbar';\r\nimport {BrowserRouter, Redirect, Route, Switch, withRouter, HashRouter} from \"react-router-dom\";\r\n\r\nimport UsersContainer from \"./components/Users/UsersContainer\";\r\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\r\nimport LoginPage from \"./components/Login/Login\";\r\nimport {connect, Provider} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\nimport {initializeApp} from \"./redux/app-reducer\";\r\nimport Preloader from \"./components/common/Preloader/Preloader\";\r\nimport store from \"./redux/redux-store\";\r\nimport {withSuspense} from \"./hoc/withSuspense\";\r\nimport ErrorBoundary from './components/error-boundry/error-boundry';\r\n\r\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\r\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'));\r\n\r\n\r\nclass App extends Component {\r\n    \r\n    componentDidMount() {\r\n        this.props.initializeApp();\r\n    \r\n    }\r\n \r\n    render() {\r\n        if (!this.props.initialized) {\r\n            return <div className= \"load\"><Preloader/></div>\r\n        }\r\n\r\n        return (\r\n            <div className='app-wrapper'>\r\n                <HeaderContainer/>\r\n                <Navbar/>\r\n                <div className='app-wrapper-content'>\r\n                    <Switch>\r\n                \r\n                        <Route exact path='/'\r\n                               render={() => <Redirect to={\"/profile\"}/>}/>\r\n\r\n                        <Route path='/dialogs'\r\n                               render={withSuspense(DialogsContainer)}/>\r\n\r\n                        <Route path='/profile/:userId?'\r\n                               render={withSuspense(ProfileContainer)}/>\r\n\r\n                        <Route path='/users'\r\n                               render={() => <UsersContainer/>}/>\r\n\r\n                        <Route path='/login'\r\n                               render={() => <LoginPage/>}/>\r\n\r\n                         <Redirect from=\"/\" to=\"/profile\" />\r\n                    </Switch>\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    initialized: state.app.initialized\r\n})\r\n\r\nlet AppContainer = compose(\r\n    withRouter,\r\n    connect(mapStateToProps, {initializeApp}))(App);\r\n\r\nconst SamuraiJSApp = (props) => {\r\n    return <HashRouter>\r\n    <ErrorBoundary>\r\n        <Provider store={store}>\r\n            <AppContainer/>\r\n        </Provider>\r\n        </ErrorBoundary>\r\n    </HashRouter>\r\n}\r\n\r\nexport default SamuraiJSApp;\r\n","import * as serviceWorker from './serviceWorker';\r\n\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport SamuraiJSApp from \"./App\";\r\n\r\nReactDOM.render(<SamuraiJSApp/>, document.getElementById('root'));\r\n\r\n\r\n\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"users_userPhoto__3VNZU\",\"button\":\"users_button__1vIiB\",\"user\":\"users_user__MV8Ci\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__1tHlf\",\"pageNumber\":\"Paginator_pageNumber__veKgb\",\"selectedPage\":\"Paginator_selectedPage__1f6a9\",\"button\":\"Paginator_button__1-o6r\"};","import React from 'react';\r\nimport \"./Preloader.css\"\r\n\r\nconst Preloader = () => {\r\n    return (<div className=\"loadingio-spinner-double-ring-t7tyf230e6\"><div className=\"ldio-cugu5hgume\">\r\n    <div></div>\r\n    <div></div>\r\n    <div><div></div></div>\r\n    <div><div></div></div>\r\n    </div></div>)\r\n  \r\n}\r\nexport default Preloader;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl___dRWw\",\"error\":\"FormsControls_error__3_KfC\",\"formSummaryError\":\"FormsControls_formSummaryError__1kS8L\"};","export const required = value => {\r\n    if (value) return undefined;\r\n\r\n    return \"Field is required\";\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n    return undefined;\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__8Cnf7\",\"loginBlock\":\"Header_loginBlock__1f2H4\",\"logo\":\"Header_logo__3NxzC\"};","import {profileAPI, usersAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\nimport {PhotosType, PostType, ProfileType} from '../types/types';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\n\r\nconst ADD_POST = 'social-network/profile/ADD-POST';\r\nconst SET_USER_PROFILE = 'social-network/profile/SET_USER_PROFILE';\r\nconst SET_STATUS = 'social-network/profile/SET_STATUS';\r\nconst DELETE_POST = 'social-network/profile/DELETE_POST';\r\nconst SAVE_PHOTO_SUCCESS = 'social-network/profile/SAVE_PHOTO_SUCCESS';\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, message: \"what's up man?\", likesCount: 12},\r\n        {id: 2, message: 'so fine, how are you', likesCount: 11},\r\n        {id: 3, message: 'we go to the cinema tonight', likesCount: 11},\r\n        {id: 4, message: \"oooo, it's ok\", likesCount: 11}\r\n    ] as Array<PostType>,\r\n    profile: null as ProfileType | null,\r\n    status: '',\r\n    newPostText: ''\r\n};\r\nexport type InitialStateType = typeof initialState;\r\n\r\nconst profileReducer = (state = initialState, action: any): InitialStateType => {\r\n\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 5,\r\n                message: action.newPostText,\r\n                likesCount: 0\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n                newPostText: ''\r\n            };\r\n        }\r\n        case SET_STATUS: {\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        }\r\n        case SET_USER_PROFILE: {\r\n            return {...state, profile: action.profile}\r\n        }\r\n\r\n        case DELETE_POST:\r\n            return {...state, posts: state.posts.filter(p => p.id != action.postId)}\r\n\r\n        case SAVE_PHOTO_SUCCESS:\r\n            return {...state, profile: {...state.profile, photos: action.photos} as ProfileType}\r\n        \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\ntype AddPostActionCreatorActionType = {\r\n    type: typeof ADD_POST\r\n    newPostText: string\r\n}\r\nexport const addPostActionCreator = (newPostText: string): AddPostActionCreatorActionType => ({type: ADD_POST, newPostText})\r\ntype SetUserProfileActionType = {\r\n    type: typeof SET_USER_PROFILE\r\n    profile: ProfileType\r\n}\r\nexport const setUserProfile = (profile: ProfileType): SetUserProfileActionType => ({type: SET_USER_PROFILE, profile})\r\ntype SetStatusActionType = {\r\n    type: typeof SET_STATUS\r\n    status: string\r\n}\r\nexport const setStatus = (status: string): SetStatusActionType => ({type: SET_STATUS, status})\r\ntype DeletePostActionType = {\r\n    type: typeof DELETE_POST\r\n    postId: number\r\n}\r\nexport const deletePost = (postId: number): DeletePostActionType => ({type: DELETE_POST, postId})\r\ntype SavePhotoSuccessActionType = {\r\n    type: typeof SAVE_PHOTO_SUCCESS\r\n    photos: PhotosType\r\n}\r\nexport const savePhotoSuccess = (photos: PhotosType) => ({type: SAVE_PHOTO_SUCCESS, photos})\r\n\r\nexport const getUserProfile = (userId: number) => async (dispatch: any) => {\r\n    const response = await usersAPI.getProfile(userId);\r\n    dispatch(setUserProfile(response.data));\r\n}\r\n\r\nexport const getStatus = (userId: number) => async (dispatch: any) => {\r\n    let response = await profileAPI.getStatus(userId);\r\n    dispatch(setStatus(response.data));\r\n}\r\n\r\nexport const updateStatus = (status: string) => async (dispatch: any) => {\r\n    try {\r\n        let response = await profileAPI.updateStatus(status);\r\n\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(setStatus(status));\r\n        }\r\n    } catch(error) {\r\n        //\r\n    }\r\n}\r\nexport const savePhoto = (file: any) => async (dispatch: any) => {\r\n    let response = await profileAPI.savePhoto(file);\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(savePhotoSuccess(response.data.data.photos));\r\n    }\r\n}\r\nexport const saveProfile = (profile: ProfileType) => async (dispatch: any, getState: any) => {\r\n    const userId = getState().auth.userId;\r\n    const response = await profileAPI.saveProfile(profile);\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getUserProfile(userId));\r\n    } else {\r\n        dispatch(stopSubmit(\"edit-profile\", {_error: response.data.messages[0] }));\r\n        return Promise.reject(response.data.messages[0]);\r\n    }\r\n}\r\n\r\nexport default profileReducer;\r\n"],"sourceRoot":""}